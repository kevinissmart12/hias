{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Index',\n  data() {\n    return {\n      data: [],\n      inputValue: ''\n    };\n  },\n  methods: {\n    ConnectWebSocket() {\n      var ws = new WebSocket(\"ws://127.0.0.1:3000\");\n      // 建立连接\n      websocket.onopen = () => {\n        // 发送数据\n        websocket.send(\"发送数据\");\n        console.log(\"websocket发送数据中\");\n      };\n      // 客户端接收服务端返回的数据\n      websocket.onmessage = evt => {\n        console.log(\"websocket返回的数据：\", evt);\n      };\n      // 发生错误时\n      websocket.onerror = evt => {\n        console.log(\"websocket错误：\", evt);\n      };\n      // 关闭连接\n      websocket.onclose = evt => {\n        console.log(\"websocket关闭：\", evt);\n      };\n    },\n    send() {\n      let inputValue = this.inputValue;\n      ws.send(inputValue);\n    },\n    closeWebSocket() {\n      // 关闭websocket\n      ws.onclose = function () {\n        // 关闭 websocket\n        console.log(\"连接已关闭...\");\n      };\n    },\n    onMessage() {\n      // 接收消息后客户端处理方法\n      ws.onmessage = function (evt) {\n        this.data.push(evt.data);\n      };\n    }\n  },\n  created() {},\n  components: {}\n};","map":{"version":3,"mappings":";AAaA;EACAA;EACAC;IACA;MACAA;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;MACAC;QACA;QACAA;QACAC;MACA;MACA;MACAD;QACAC;MACA;MACA;MACAD;QACAC;MACA;MACA;MACAD;QACAC;MACA;IAEA;IACAC;MACA;MACAC;IACA;IACAC;MACA;MACAD,yBACA;QACA;QACAF;MACA;IACA;IACAI;MACA;MACAF,8BACA;QACA;MACA;IACA;EACA;EACAG,WAEA;EACAC,aAEA;AACA","names":["name","data","inputValue","methods","ConnectWebSocket","websocket","console","send","ws","closeWebSocket","onMessage","created","components"],"sourceRoot":"src/view","sources":["Index.vue"],"sourcesContent":["<template>\r\n    <div class=\"index\">\r\n        <div v-for=\"(item,index) in data\" :key=\"index\">\r\n            item\r\n        </div>\r\n        <el-input v-model.trim='inputValue'></el-input>\r\n        <el-button @click=\"send\">发送</el-button>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    name:'Index',\r\n    data(){\r\n        return{\r\n            data:[],\r\n            inputValue:''\r\n        }\r\n    },\r\n    methods:{\r\n        ConnectWebSocket(){\r\n            var ws = new WebSocket(\"ws://127.0.0.1:3000\");\r\n            // 建立连接\r\n            websocket.onopen = () => {\r\n            // 发送数据\r\n            websocket.send(\"发送数据\");\r\n            console.log(\"websocket发送数据中\");\r\n            };\r\n            // 客户端接收服务端返回的数据\r\n            websocket.onmessage = evt => {\r\n            console.log(\"websocket返回的数据：\", evt);\r\n            };\r\n            // 发生错误时\r\n            websocket.onerror = evt => {\r\n            console.log(\"websocket错误：\", evt);\r\n            };\r\n            // 关闭连接\r\n            websocket.onclose = evt => {\r\n            console.log(\"websocket关闭：\", evt);\r\n            };\r\n\r\n        },\r\n        send(){\r\n            let inputValue=this.inputValue\r\n            ws.send(inputValue)\r\n        },\r\n        closeWebSocket(){\r\n            // 关闭websocket\r\n            ws.onclose = function()\r\n            { \r\n                // 关闭 websocket\r\n                console.log(\"连接已关闭...\"); \r\n            };\r\n        },\r\n        onMessage(){\r\n            // 接收消息后客户端处理方法\r\n            ws.onmessage = function (evt) \r\n            { \r\n                this.data.push(evt.data)\r\n            };\r\n        }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    components:{\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped> \r\n    .index{\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        background-color: #fff;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}