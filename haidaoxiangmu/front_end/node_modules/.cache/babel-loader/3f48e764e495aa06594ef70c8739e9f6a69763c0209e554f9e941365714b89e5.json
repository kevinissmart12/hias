{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  namespaced: true,\n  state: {\n    polygons: [],\n    //是否显示绘制按钮\n    //0=>添加池塘,1=>停止绘制,2=>编辑池塘,3=>停止编辑\n    drawing: 0,\n    //owner list，渲染的是选择的表\n    owner: [],\n    //product\n    product: [],\n    //新添加的图形的中心点经纬度\n    marker: {},\n    //area\n    estimateArea: '',\n    area: \"\",\n    //drawingPolygon\n    drawingPolygon: '',\n    //town/village\n    town: '',\n    village: '',\n    comment: '',\n    //owner，渲染点击点后的情况\n    ownerMarker: ''\n  },\n  mutations: {\n    setPolygons(state, data) {\n      data.forEach((i, v) => {\n        let object = {\n          position: {\n            lat: '',\n            lng: ''\n          },\n          polygon: [],\n          owner: {},\n          product: {},\n          area: '',\n          estimateArea: '',\n          town: '',\n          village: '',\n          comment: ''\n        };\n        object.position.lat = i.lat;\n        object.position.lng = i.lng;\n        //对i.polygon做变化\n        let tempP = i.polygon.split(';');\n        tempP.forEach(subi => {\n          let lat = subi.split(',')[1];\n          let lng = subi.split(',')[0];\n          let temp_obj = {\n            lat: lat,\n            lng: lng\n          };\n          object.polygon.push(temp_obj);\n        });\n        //对池塘的owner做处理\n        object.owner = i.owner;\n\n        //对池塘的养殖品种做处理\n        object.product = i.product;\n        object.area = i.area;\n        object.estimateArea = i.estimateArea;\n        object.town = i.town;\n        object.village = i.village;\n        object.comment = i.comment;\n        state.polygons.push(object);\n      });\n    },\n    setDrawing(state, data) {\n      state.drawing = data;\n    },\n    setOwner(state, data) {\n      state.owner = data;\n    },\n    setProduct(state, data) {\n      state.product = data;\n    },\n    setMarker(state, data) {\n      state.marker = data;\n    },\n    setEstimateArea(state, data) {\n      state.estimateArea = data;\n    },\n    setArea(state, data) {\n      state.area = data;\n    },\n    setTown(state, data) {\n      state.town = data;\n    },\n    setVillage(state, data) {\n      state.village = data;\n    },\n    setComment(state, data) {\n      state.comment = data;\n    },\n    setDrawingPolygon(state, data) {\n      console.log(data);\n      let str = '';\n      data.forEach((i, v) => {\n        str = str.concat(i.lng, ',', i.lat, ';');\n      });\n      state.drawingPolygon = str;\n    }\n  }\n};","map":{"version":3,"names":["namespaced","state","polygons","drawing","owner","product","marker","estimateArea","area","drawingPolygon","town","village","comment","ownerMarker","mutations","setPolygons","data","forEach","i","v","object","position","lat","lng","polygon","tempP","split","subi","temp_obj","push","setDrawing","setOwner","setProduct","setMarker","setEstimateArea","setArea","setTown","setVillage","setComment","setDrawingPolygon","console","log","str","concat"],"sources":["C:/Users/29903/Desktop/毕业设计的各种准备/haidaoxiangmu/hias/src/store/Ponds/index.js"],"sourcesContent":["export default {\r\n    namespaced:true,\r\n    state:{\r\n        polygons:[],\r\n        \r\n\r\n        //是否显示绘制按钮\r\n        //0=>添加池塘,1=>停止绘制,2=>编辑池塘,3=>停止编辑\r\n        drawing:0,\r\n\r\n\r\n        //owner list，渲染的是选择的表\r\n        owner:[],\r\n\r\n        //product\r\n        product:[],\r\n\r\n        //新添加的图形的中心点经纬度\r\n        marker:{},\r\n        //area\r\n        estimateArea:'',\r\n        area:\"\",\r\n        //drawingPolygon\r\n        drawingPolygon:'',\r\n        //town/village\r\n        town:'',\r\n        village:'',\r\n        comment:'',\r\n        //owner，渲染点击点后的情况\r\n        ownerMarker:'',\r\n        \r\n    },\r\n    mutations:{\r\n        \r\n        setPolygons(state,data){\r\n\r\n            data.forEach((i,v)=>{\r\n                let object={\r\n                    position:{\r\n                        lat:'',\r\n                        lng:'',\r\n                    },\r\n                    polygon:[],\r\n                    owner:{},\r\n                    product:{},\r\n                    area:'',\r\n                    estimateArea:'',\r\n                    town:'',\r\n                    village:'',\r\n                    comment:''\r\n                }\r\n                object.position.lat=i.lat\r\n                object.position.lng=i.lng\r\n                //对i.polygon做变化\r\n                let tempP=i.polygon.split(';')\r\n                tempP.forEach(subi=>{\r\n                    let lat=subi.split(',')[1]\r\n                    let lng=subi.split(',')[0]\r\n                    let temp_obj={\r\n                        lat:lat,\r\n                        lng:lng\r\n                    }\r\n                    object.polygon.push(temp_obj)\r\n                })\r\n                //对池塘的owner做处理\r\n                object.owner=i.owner\r\n\r\n                //对池塘的养殖品种做处理\r\n                object.product=i.product\r\n\r\n                object.area=i.area\r\n                object.estimateArea=i.estimateArea\r\n                object.town=i.town\r\n                object.village=i.village\r\n                object.comment=i.comment\r\n                state.polygons.push(object)\r\n            })\r\n        },\r\n        \r\n        setDrawing(state,data){\r\n            state.drawing=data\r\n        },\r\n\r\n\r\n        setOwner(state,data){\r\n            state.owner=data\r\n        },\r\n        setProduct(state,data){\r\n            state.product=data\r\n        },\r\n\r\n        setMarker(state,data){\r\n            state.marker=data\r\n        },\r\n        setEstimateArea(state,data){\r\n            state.estimateArea=data\r\n        },\r\n        setArea(state,data){\r\n            state.area=data\r\n        },\r\n        setTown(state,data){\r\n            state.town=data\r\n        },\r\n        setVillage(state,data){\r\n            state.village=data\r\n        },\r\n        setComment(state,data){\r\n            state.comment=data\r\n        },\r\n        setDrawingPolygon(state,data){\r\n            console.log(data);\r\n            let str=''\r\n            data.forEach((i,v)=>{\r\n                str=str.concat(i.lng,',',i.lat,';')\r\n            })\r\n            state.drawingPolygon=str\r\n        }\r\n\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}