{"ast":null,"code":"export default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      map: {},\n      //用于创建地图初始坐标\n      allMapPoint: {\n        x: 122.0478587026,\n        y: 29.942425790241312\n      },\n      //多边图行中间点,\n      //只有点击图行时，才出现\n      //当有多个图行时，最多只出现一个\n      centerPoint: {\n        x: 122.0478587026,\n        y: 29.942425790241312\n      },\n      //centerpoint marker\n      centerPointMarker: {},\n      //以,;来判断点，最后一组数据不能有;\n      points: ['122.0452438546,29.94264534284173;122.0457689541,29.942290903455056;122.0448565938,29.940878850006936;122.0442264745,29.94178210920206'],\n      //多边形\n      polygon: {},\n      polygonLength: 0\n    };\n  },\n  methods: {\n    CreateMap() {\n      this.map = new BMapGL.Map(\"map\"); // 创建地图实例   需要容器的id\n      var point = new BMapGL.Point(this.allMapPoint.x, this.allMapPoint.y); // 创建点坐标 \n      this.map.centerAndZoom(point, 15); //初始化地图，设置中心点坐标和地图级别\n      this.map.enableScrollWheelZoom(true); //开启鼠标滚轮缩放\n\n      this.map.addEventListener('click', function (e) {\n        console.log('点击位置经纬度：' + e.latlng.lng + ',' + e.latlng.lat);\n      });\n\n      //控件偏移参数\n      var opts = {\n        offset: new BMapGL.Size(10, 10)\n      };\n      //以下为缩放控件，这是必备的\n      var zoomCtrl = new BMapGL.ZoomControl(opts); // 添加缩放控件\n      this.map.addControl(zoomCtrl);\n      this.map.setMapType(BMAP_SATELLITE_MAP); // 设置地图类型为地球模式\n    },\n\n    endEdit() {\n      this.polygon.disableEditing();\n\n      //修改这个多边图行的点数\n      this.polygonLength = this.polygon.points.length;\n      this.setCenterPoint();\n    },\n    startEdit() {\n      this.polygon.enableEditing();\n    },\n    //设置图行中间点\n    setCenterPoint() {\n      //remove 旧的点\n      if (this.centerPointMarker.point != undefined) {\n        //存在旧的点\n        this.map.removeOverlay(this.centerPointMarker);\n      }\n      //根据polygon的多组坐标=>求出平均点，而且这个点必须存在于多边形中\n\n      this.getCenterPoint();\n\n      //用于在地图上显示渔场的中间坐标 \n      var centerPoint = new BMapGL.Point(this.centerPoint.x, this.centerPoint.y); // 创建点坐标 \n\n      this.centerPointMarker = new BMapGL.Marker(centerPoint, {\n        //是否能都移动\n        enableDragging: false\n      });\n      // 创建标注   \n      this.map.addOverlay(this.centerPointMarker);\n      this.centerPointMarker.addEventListener(\"click\", function (e) {\n        console.log(e);\n      });\n    },\n    //初始化已存在的多边图行\n    setPolygon(callback) {\n      //初始化已存在的多边图行\n      this.polygon = new BMapGL.Polygon(this.points, {\n        strokeColor: \"blue\",\n        strokeWeight: 2,\n        strokeOpacity: 0.5\n      });\n      this.map.addOverlay(this.polygon);\n      this.polygon.enableEditing();\n      this.polygonLength = this.polygon.points.length;\n      if (typeof callback == 'function') {\n        callback();\n      }\n    },\n    //求出多边形中间顶\n    getCenterPoint() {\n      //存在中心和重心在图形外面的情况\n      //先用点之间的平均值来求\n      //获取当前多边形所有的点\n      // console.log(this.polygon.points);\n      var list = Array.from(this.polygon.points);\n      var totalX = 0;\n      var totalY = 0;\n      var length = list.length;\n      //此时新添加的点\n      list.forEach((i, v) => {\n        if (i.latLng == undefined) {\n          //百度地图提供的api\n          let latLngResult = this.map.mercatorToLnglat(i.lng, i.lat);\n          //给该点加入坐标\n          i.latLng = {\n            lat: latLngResult[1],\n            lng: latLngResult[0]\n          };\n        }\n        //把坐标的值加入到总的值中\n        totalX += i.latLng.lng;\n        totalY += i.latLng.lat;\n      });\n      this.centerPoint.x = totalX / length;\n      this.centerPoint.y = totalY / length;\n    }\n  },\n  mounted() {\n    this.CreateMap();\n    this.setPolygon(() => {\n      this.setCenterPoint();\n    });\n  }\n};","map":{"version":3,"mappings":"AAeA;EACAA;EACAC;IACA;MACAC;MACA;MACAC;QACAC;QACAC;MACA;MACA;MACA;MACA;MACAC;QACAF;QACAC;MACA;MACA;MACAE;MACA;MACAC;MACA;MACAC;MACAC;IACA;EACA;EACAC;IAEAC;MACA;MACA;MACA;MACA;;MAEA;QACAC;MACA;;MAEA;MACA;QACAC;MACA;MACA;MACA;MACA;MAEA;IAEA;;IACAC;MACA;;MAEA;MACA;MACA;IAEA;IACAC;MACA;IACA;IAGA;IACAC;MAEA;MACA;QACA;QACA;MACA;MACA;;MAEA;;MAEA;MACA;;MAEA;QACA;QACAC;MACA;MACA;MACA;MACA;QACAL;MACA;IAEA;IACA;IACAM;MACA;MACA;QAAAC;QAAAC;QAAAC;MAAA;MACA;MACA;MACA;MAEA;QACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC;QAEA;UACA;UACA;UACA;UACAC;YACAC;YACAC;UACA;QAGA;QACA;QACAC;QACAC;MAEA;MACA;MACA;IAEA;EAGA;EACAC;IACA;IACA;MACA;IACA;EAEA;AAEA","names":["name","data","map","allMapPoint","x","y","centerPoint","centerPointMarker","points","polygon","polygonLength","methods","CreateMap","console","offset","endEdit","startEdit","setCenterPoint","enableDragging","setPolygon","strokeColor","strokeWeight","strokeOpacity","callback","getCenterPoint","list","i","lat","lng","totalX","totalY","mounted"],"sourceRoot":"src/components/ponds","sources":["Map.vue"],"sourcesContent":["<template>\r\n    <div class=\"hello\">\r\n        \r\n        <div class=\"map\" id=\"map\">\r\n\r\n        </div>\r\n\r\n        <button @click=\"startEdit\">编辑</button>\r\n        <button @click=\"endEdit\">停止</button>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    name: 'HelloWorld',\r\n    data(){\r\n        return{\r\n            map:{},\r\n            //用于创建地图初始坐标\r\n            allMapPoint:{\r\n                x:122.0478587026,\r\n                y:29.942425790241312\r\n            },\r\n            //多边图行中间点,\r\n            //只有点击图行时，才出现\r\n            //当有多个图行时，最多只出现一个\r\n            centerPoint:{\r\n                x:122.0478587026,\r\n                y:29.942425790241312,\r\n            },\r\n            //centerpoint marker\r\n            centerPointMarker:{},\r\n            //以,;来判断点，最后一组数据不能有;\r\n            points:['122.0452438546,29.94264534284173;122.0457689541,29.942290903455056;122.0448565938,29.940878850006936;122.0442264745,29.94178210920206'],\r\n            //多边形\r\n            polygon:{},\r\n            polygonLength:0,\r\n        }\r\n    },\r\n    methods:{\r\n\r\n        CreateMap(){\r\n            this.map = new BMapGL.Map(\"map\");          // 创建地图实例   需要容器的id\r\n            var point = new BMapGL.Point(this.allMapPoint.x,this.allMapPoint.y);  // 创建点坐标 \r\n            this.map.centerAndZoom(point, 15);     //初始化地图，设置中心点坐标和地图级别\r\n            this.map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放\r\n\r\n            this.map.addEventListener('click', function (e) {\r\n                console.log('点击位置经纬度：' + e.latlng.lng+ ',' + e.latlng.lat);\r\n            });\r\n\r\n            //控件偏移参数\r\n            var opts = {\r\n                offset: new BMapGL.Size(10, 10)\r\n            }\r\n            //以下为缩放控件，这是必备的\r\n            var zoomCtrl = new BMapGL.ZoomControl(opts);  // 添加缩放控件\r\n            this.map.addControl(zoomCtrl)\r\n\r\n            this.map.setMapType(BMAP_SATELLITE_MAP);      // 设置地图类型为地球模式\r\n\r\n        },\r\n        endEdit(){\r\n            this.polygon.disableEditing();\r\n\r\n            //修改这个多边图行的点数\r\n            this.polygonLength=this.polygon.points.length\r\n            this.setCenterPoint()\r\n\r\n        },\r\n        startEdit(){\r\n            this.polygon.enableEditing();\r\n        },\r\n\r\n\r\n        //设置图行中间点\r\n        setCenterPoint(){\r\n        \r\n            //remove 旧的点\r\n            if(this.centerPointMarker.point!=undefined){\r\n                //存在旧的点\r\n                this.map.removeOverlay(this.centerPointMarker)\r\n            }\r\n            //根据polygon的多组坐标=>求出平均点，而且这个点必须存在于多边形中\r\n\r\n            this.getCenterPoint()\r\n\r\n            //用于在地图上显示渔场的中间坐标 \r\n            var centerPoint = new BMapGL.Point(this.centerPoint.x,this.centerPoint.y);  // 创建点坐标 \r\n            \r\n            this.centerPointMarker = new BMapGL.Marker(centerPoint, {\r\n                //是否能都移动\r\n                enableDragging: false\r\n            });        \r\n            // 创建标注   \r\n            this.map.addOverlay(this.centerPointMarker); \r\n            this.centerPointMarker.addEventListener(\"click\", function(e){   \r\n                console.log(e);  \r\n            });\r\n\r\n        },\r\n        //初始化已存在的多边图行\r\n        setPolygon(callback){\r\n            //初始化已存在的多边图行\r\n            this.polygon = new BMapGL.Polygon(this.points, {strokeColor:\"blue\", strokeWeight:2, strokeOpacity:0.5});\r\n            this.map.addOverlay(this.polygon);\r\n            this.polygon.enableEditing();\r\n            this.polygonLength=this.polygon.points.length\r\n            \r\n            if(typeof callback=='function'){\r\n                callback()\r\n            }\r\n        },\r\n\r\n        //求出多边形中间顶\r\n        getCenterPoint(){\r\n            //存在中心和重心在图形外面的情况\r\n            //先用点之间的平均值来求\r\n            //获取当前多边形所有的点\r\n            // console.log(this.polygon.points);\r\n            var list=Array.from(this.polygon.points)\r\n            var totalX=0\r\n            var totalY=0\r\n            var length=list.length\r\n            //此时新添加的点\r\n            list.forEach((i,v)=>{\r\n                \r\n                if(i.latLng==undefined){\r\n                    //百度地图提供的api\r\n                    let latLngResult=this.map.mercatorToLnglat(i.lng,i.lat)\r\n                    //给该点加入坐标\r\n                    i.latLng={\r\n                        lat:latLngResult[1],\r\n                        lng:latLngResult[0]\r\n                    }\r\n\r\n\r\n                }\r\n                //把坐标的值加入到总的值中\r\n                totalX+=i.latLng.lng\r\n                totalY+=i.latLng.lat\r\n\r\n            })\r\n            this.centerPoint.x=totalX/length\r\n            this.centerPoint.y=totalY/length\r\n\r\n        },\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.CreateMap()\r\n        this.setPolygon(()=>{\r\n            this.setCenterPoint()\r\n        })\r\n        \r\n    },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n    .map{\r\n        margin: 50px;\r\n        width:500px;\r\n        height: 400px;\r\n        background-color: pink;\r\n\r\n    }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}