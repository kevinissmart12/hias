{"ast":null,"code":"export default {\n  name: 'main_com',\n  data() {\n    return {\n      tableItem: [{\n        'id': '1',\n        prop: 'countyContent',\n        label: '所在区/县',\n        width: '120',\n        sortable: true\n      }, {\n        'id': '2',\n        prop: 'townContent',\n        label: '所在镇',\n        width: '100',\n        sortable: false\n      }, {\n        'id': '3',\n        prop: 'villageContent',\n        label: '所在村',\n        width: '150',\n        sortable: false\n      }, {\n        'id': '4',\n        prop: 'seaArea',\n        label: '海水养殖面积',\n        width: '150',\n        sortable: true\n      }, {\n        'id': '5',\n        prop: 'seaEstimateArea',\n        label: '海水养殖估算面积',\n        width: '150',\n        sortable: false\n      }, {\n        'id': '6',\n        prop: 'freshWaterArea',\n        label: '淡水养殖面积',\n        width: '150',\n        sortable: true\n      }, {\n        'id': '7',\n        prop: 'freshWaterEstimateArea',\n        label: '淡水养殖估算面积',\n        width: '150',\n        sortable: false\n      }, {\n        'id': '8',\n        prop: 'totalArea',\n        label: '养殖总面积',\n        width: '150',\n        sortable: true\n      }, {\n        'id': '9',\n        prop: 'totalEstimateArea',\n        label: '养殖估算总面积',\n        width: '150',\n        sortable: false\n      }],\n      currentPage: 1,\n      pagesize: 10,\n      tempTableData: []\n    };\n  },\n  methods: {\n    getProducts() {\n      this.$axios({\n        url: '/api/products/getAll',\n        method: 'GET'\n      }).then(res => {\n        console.log(res.data);\n        if (res.data.status == 200) {\n          this.$store.commit('statistic/setAllProducts', res.data.data.data);\n        }\n      });\n    },\n    //获取所有的镇和村\n    getAllTown() {\n      if (localStorage.getItem('town')) {\n        this.$store.commit('statistic/setTownData');\n      } else {\n        this.$axios({\n          url: '/api/area/getAllTown',\n          method: 'GET'\n        }).then(res => {\n          if (res.data.status == 200) {\n            //赋值  \n            this.$store.commit('statistic/setTownData', res.data.data.data);\n          }\n        });\n      }\n      this.getALlVillage();\n    },\n    getALlVillage() {\n      if (localStorage.getItem('village')) {\n        this.$store.commit('statistic/setVillageData');\n      } else {\n        this.$axios({\n          url: '/api/area/getAllVillage',\n          method: 'GET'\n        }).then(res => {\n          if (res.data.status == 200) {\n            //赋值  \n            this.$store.commit('statistic/setVillageData', res.data.data.data);\n          }\n        });\n      }\n    },\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.tempTableData = this.PondsType.slice((this.currentPage - 1) * this.pagesize, this.currentPage * this.pagesize);\n    },\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.tempTableData = this.PondsType.slice((this.currentPage - 1) * this.pagesize, this.currentPage * this.pagesize);\n    }\n  },\n  created() {\n    this.getProducts();\n  }\n};","map":{"version":3,"mappings":"AA8BA;EACAA;EACAC;IACA;MACAC,YACA;QAAA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,EACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACAC;QACAC;MACA;QACAC;QACA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;QACA;MACA;QACA;UACAH;UACAC;QACA;UACA;YACA;YACA;UACA;QACA;MACA;MACA;IACA;IACAG;MACA;QACA;MACA;QACA;UACAJ;UACAC;QACA;UACA;YACA;YACA;UACA;QACA;MACA;IAEA;IACAI;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","tableItem","prop","label","width","sortable","currentPage","pagesize","tempTableData","methods","getProducts","url","method","console","getAllTown","getALlVillage","handleSizeChange","handleCurrentChange","created"],"sourceRoot":"src/components/statistic/TownStatus","sources":["Main.vue"],"sourcesContent":["<template>\r\n    <div class=\"main\">\r\n                <el-card class=\"table-card\">\r\n            <div slot=\"header\" class=\"clearfix\">\r\n                <span>养殖池溏类型统计</span>\r\n            </div>\r\n            <el-table\r\n                :data=\"tempTableData\"\r\n                style=\"width: 100%\"\r\n                :default-sort = \"{prop: 'countyContent', order: 'ascending'}\">\r\n                <el-table-column\r\n                    :prop=\"item.prop\"\r\n                    :label=\"item.label\"\r\n                    :width=\"item.width\"\r\n                    v-for=\"(item,index) in tableItem\" \r\n                    :key=\"index\"\r\n                    :sortable=\"item.sortable\"\r\n                >\r\n                    <template slot-scope=\"scope\">\r\n                        <img v-if=\"item.prop=='imgUrl'\" :src=\"scope.row.imgUrl\" alt=\"\" width=\"90\">\r\n                        <div v-else>{{scope.row[item.prop]}}</div>\r\n                    </template>\r\n                </el-table-column>\r\n\r\n            </el-table>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'main_com',\r\n    data(){\r\n        return{\r\n            tableItem:[\r\n                {'id':'1',prop:'countyContent',label:'所在区/县',width:'120',sortable:true},\r\n                {'id':'2',prop:'townContent',label:'所在镇',width:'100',sortable:false},\r\n                {'id':'3',prop:'villageContent',label:'所在村',width:'150',sortable:false},\r\n                {'id':'4',prop:'seaArea',label:'海水养殖面积',width:'150',sortable:true},\r\n                {'id':'5',prop:'seaEstimateArea',label:'海水养殖估算面积',width:'150',sortable:false},\r\n                {'id':'6',prop:'freshWaterArea',label:'淡水养殖面积',width:'150',sortable:true},\r\n                {'id':'7',prop:'freshWaterEstimateArea',label:'淡水养殖估算面积',width:'150',sortable:false},\r\n                {'id':'8',prop:'totalArea',label:'养殖总面积',width:'150',sortable:true},\r\n                {'id':'9',prop:'totalEstimateArea',label:'养殖估算总面积',width:'150',sortable:false},\r\n            ],\r\n            currentPage:1,\r\n            pagesize:10,\r\n            tempTableData:[],\r\n        }\r\n    },\r\n    methods:{\r\n        getProducts(){\r\n            this.$axios({\r\n                url:'/api/products/getAll',\r\n                method:'GET'\r\n            }).then(res=>{\r\n                console.log(res.data);\r\n                if(res.data.status==200){\r\n                    this.$store.commit('statistic/setAllProducts',res.data.data.data)\r\n                }\r\n            })\r\n        },\r\n        //获取所有的镇和村\r\n        getAllTown(){\r\n            if(localStorage.getItem('town')){\r\n                this.$store.commit('statistic/setTownData')\r\n            }else{\r\n                this.$axios({\r\n                    url:'/api/area/getAllTown',\r\n                    method:'GET',\r\n                }).then(res=>{\r\n                    if(res.data.status==200){\r\n                        //赋值  \r\n                        this.$store.commit('statistic/setTownData',res.data.data.data)\r\n                    }\r\n                })\r\n            }\r\n            this.getALlVillage()\r\n        },\r\n        getALlVillage(){\r\n            if(localStorage.getItem('village')){\r\n                this.$store.commit('statistic/setVillageData')\r\n            }else{\r\n                this.$axios({\r\n                    url:'/api/area/getAllVillage',\r\n                    method:'GET',\r\n                }).then(res=>{\r\n                    if(res.data.status==200){\r\n                        //赋值  \r\n                        this.$store.commit('statistic/setVillageData',res.data.data.data)\r\n                    }\r\n                })\r\n            }\r\n\r\n        },\r\n        handleSizeChange (size) {\r\n            this.pagesize = size;\r\n            this.tempTableData=this.PondsType.slice((this.currentPage-1)*this.pagesize,this.currentPage*this.pagesize)\r\n        },\r\n        handleCurrentChange (currentPage) {\r\n            this.currentPage = currentPage;\r\n            this.tempTableData=this.PondsType.slice((this.currentPage-1)*this.pagesize,this.currentPage*this.pagesize)\r\n        },\r\n    },\r\n    created(){\r\n        this.getProducts()\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}