{"ast":null,"code":"import t from \"vue\";\nimport { createEditor as e, DomEditor as o, createToolbar as r } from \"@wangeditor/editor\";\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nvar n = function () {\n  return n = Object.assign || function (t) {\n    for (var e, o = 1, r = arguments.length; o < r; o++) for (var n in e = arguments[o]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);\n    return t;\n  }, n.apply(this, arguments);\n};\nfunction i(t) {\n  var e = \"请使用 '@\".concat(t, \"' 事件，不要放在 props 中\");\n  return e += \"\\nPlease use '@\".concat(t, \"' event instead of props\");\n}\nvar a = t.extend({\n    render: function (t) {\n      return t(\"div\", {\n        ref: \"box\"\n      });\n    },\n    name: \"Editor\",\n    data: function () {\n      return {\n        curValue: \"\",\n        editor: null\n      };\n    },\n    props: [\"defaultContent\", \"defaultConfig\", \"mode\", \"defaultHtml\", \"value\"],\n    mounted: function () {\n      this.create();\n    },\n    watch: {\n      value: function (t) {\n        t === this.curValue || this.setHtml(t);\n      }\n    },\n    methods: {\n      setHtml: function (t) {\n        var e = this.editor;\n        null != e && e.setHtml(t);\n      },\n      create: function () {\n        var t = this;\n        if (null != this.$refs.box) {\n          var o = this.defaultConfig || {},\n            r = JSON.stringify(Array.isArray(this.defaultContent) ? this.defaultContent : []);\n          e({\n            selector: this.$refs.box,\n            html: this.defaultHtml || this.value || \"\",\n            config: n(n({}, o), {\n              onCreated: function (e) {\n                if (t.editor = Object.seal(e), t.$emit(\"onCreated\", e), o.onCreated) {\n                  var r = i(\"onCreated\");\n                  throw new Error(r);\n                }\n              },\n              onChange: function (e) {\n                var r = e.getHtml();\n                if (t.curValue = r, t.$emit(\"input\", r), t.$emit(\"onChange\", e), o.onChange) {\n                  var n = i(\"onChange\");\n                  throw new Error(n);\n                }\n              },\n              onDestroyed: function (e) {\n                if (t.$emit(\"onDestroyed\", e), o.onDestroyed) {\n                  var r = i(\"onDestroyed\");\n                  throw new Error(r);\n                }\n              },\n              onMaxLength: function (e) {\n                if (t.$emit(\"onMaxLength\", e), o.onMaxLength) {\n                  var r = i(\"onMaxLength\");\n                  throw new Error(r);\n                }\n              },\n              onFocus: function (e) {\n                if (t.$emit(\"onFocus\", e), o.onFocus) {\n                  var r = i(\"onFocus\");\n                  throw new Error(r);\n                }\n              },\n              onBlur: function (e) {\n                if (t.$emit(\"onBlur\", e), o.onBlur) {\n                  var r = i(\"onBlur\");\n                  throw new Error(r);\n                }\n              },\n              customAlert: function (e, r) {\n                if (t.$emit(\"customAlert\", e, r), o.customAlert) {\n                  var n = i(\"customAlert\");\n                  throw new Error(n);\n                }\n              },\n              customPaste: function (e, r) {\n                if (o.customPaste) {\n                  var n = i(\"customPaste\");\n                  throw new Error(n);\n                }\n                var a;\n                return t.$emit(\"customPaste\", e, r, function (t) {\n                  a = t;\n                }), a;\n              }\n            }),\n            content: JSON.parse(r),\n            mode: this.mode || \"default\"\n          });\n        }\n      }\n    }\n  }),\n  u = t.extend({\n    name: \"Toolbar\",\n    render: function (t) {\n      return t(\"div\", {\n        ref: \"box\"\n      });\n    },\n    props: [\"editor\", \"defaultConfig\", \"mode\"],\n    methods: {\n      create: function (t) {\n        null != this.$refs.box && null != t && (o.getToolbar(t) || r({\n          editor: t,\n          selector: this.$refs.box,\n          config: this.defaultConfig || {},\n          mode: this.mode || \"default\"\n        }));\n      }\n    },\n    watch: {\n      editor: {\n        handler: function (t) {\n          null != t && this.create(t);\n        },\n        immediate: !0\n      }\n    }\n  });\nexport { a as Editor, u as Toolbar };","map":{"version":3,"mappings":"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","names":["genErrorInfo","fnName","info","Vue","extend","render","h","ref","name","data","curValue","editor","props","mounted","this","create","watch","value","newVal","setHtml","methods","newHtml","$refs","box","defaultConfig","defaultContent","JSON","stringify","Array","isArray","createEditor","selector","html","defaultHtml","config","onCreated","_this","Object","seal","$emit","Error","onChange","editorHtml","getHtml","onDestroyed","onMaxLength","onFocus","onBlur","customAlert","type","info_1","customPaste","event","res","val","content","parse","mode","u","DomEditor","getToolbar","createToolbar","handler","e","immediate"],"sources":["../src/components/Editor.vue","../src/components/Toolbar.vue"],"sourcesContent":["<script lang=\"ts\">\nimport Vue from 'vue';\nimport { createEditor } from '@wangeditor/editor';\n\nfunction genErrorInfo(fnName: string) {\n  let info = `请使用 '@${fnName}' 事件，不要放在 props 中`;\n  info += `\\nPlease use '@${fnName}' event instead of props`;\n  return info;\n}\n\nexport default Vue.extend({\n  //【注意】单独写 <template>...</template> 时，rollup 打包完浏览器运行时报错，所以先在这里写 template\n  render(h) {\n    return h('div', { ref: 'box' });\n  },\n  name: 'Editor',\n  data() {\n    return {\n      curValue: '',\n      editor: null,\n    };\n  },\n  props: ['defaultContent', 'defaultConfig', 'mode', 'defaultHtml', 'value'], // value 用于自定义 v-model\n  mounted() {\n    this.create();\n  },\n  watch: {\n    // 监听 'value' 属性变化 - value 用于自定义 v-model\n    value(newVal) {\n      const isEqual = newVal === this.curValue;\n      if (isEqual) return; // 和当前内容一样，则忽略\n\n      // 重置 HTML\n      this.setHtml(newVal);\n    },\n  },\n  methods: {\n    // 重置 HTML\n    setHtml(newHtml: string) {\n      const editor = this.editor as any;\n      if (editor == null) return;\n      editor.setHtml(newHtml);\n    },\n\n    // 创建 editor\n    create() {\n      if (this.$refs.box == null) return;\n\n      const defaultConfig = this.defaultConfig || {};\n\n      const defaultContent = JSON.stringify(\n        Array.isArray(this.defaultContent) ? this.defaultContent : []\n      );\n\n      createEditor({\n        selector: this.$refs.box as Element,\n        html: this.defaultHtml || this.value || '',\n        config: {\n          ...defaultConfig,\n          onCreated: (editor) => {\n            this.editor = Object.seal(editor) as any; // 注意，一定要用 Object.seal() 否则会报错\n\n            this.$emit('onCreated', editor);\n            if (defaultConfig.onCreated) {\n              const info = genErrorInfo('onCreated');\n              throw new Error(info);\n            }\n          },\n          onChange: (editor) => {\n            const editorHtml = editor.getHtml();\n            this.curValue = editorHtml; // 记录当前 html 内容\n            this.$emit('input', editorHtml); // 用于自定义 v-model\n\n            this.$emit('onChange', editor);\n            if (defaultConfig.onChange) {\n              const info = genErrorInfo('onChange');\n              throw new Error(info);\n            }\n          },\n          onDestroyed: (editor) => {\n            this.$emit('onDestroyed', editor);\n            if (defaultConfig.onDestroyed) {\n              const info = genErrorInfo('onDestroyed');\n              throw new Error(info);\n            }\n          },\n          onMaxLength: (editor) => {\n            this.$emit('onMaxLength', editor);\n            if (defaultConfig.onMaxLength) {\n              const info = genErrorInfo('onMaxLength');\n              throw new Error(info);\n            }\n          },\n          onFocus: (editor) => {\n            this.$emit('onFocus', editor);\n            if (defaultConfig.onFocus) {\n              const info = genErrorInfo('onFocus');\n              throw new Error(info);\n            }\n          },\n          onBlur: (editor) => {\n            this.$emit('onBlur', editor);\n            if (defaultConfig.onBlur) {\n              const info = genErrorInfo('onBlur');\n              throw new Error(info);\n            }\n          },\n          customAlert: (info, type) => {\n            this.$emit('customAlert', info, type);\n            if (defaultConfig.customAlert) {\n              const info = genErrorInfo('customAlert');\n              throw new Error(info);\n            }\n          },\n          customPaste: (editor, event) => {\n            if (defaultConfig.customPaste) {\n              const info = genErrorInfo('customPaste');\n              throw new Error(info);\n            }\n            let res;\n            this.$emit('customPaste', editor, event, (val: any) => {\n              res = val;\n            });\n            return res;\n          },\n        },\n        content: JSON.parse(defaultContent),\n        mode: this.mode || 'default',\n      });\n    },\n  },\n});\n</script>\n","<script lang=\"ts\">\nimport Vue from 'vue';\nimport { createToolbar, DomEditor } from '@wangeditor/editor';\n\nexport default Vue.extend({\n  name: 'Toolbar',\n  render(h) {\n    return h('div', { ref: 'box' });\n  },\n  props: ['editor', 'defaultConfig', 'mode'],\n  methods: {\n    // 创建 toolbar\n    create(editor: any) {\n      if (this.$refs.box == null) return;\n      if (editor == null) return;\n      if (DomEditor.getToolbar(editor)) return // 不重复创建\n\n      createToolbar({\n        editor,\n        selector: this.$refs.box as Element,\n        config: this.defaultConfig || {},\n        mode: this.mode || 'default',\n      });\n    },\n  },\n  watch: {\n    editor: {\n      handler(e) {\n        if (e == null) return;\n        this.create(e);\n      },\n      immediate: true,\n    }\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}