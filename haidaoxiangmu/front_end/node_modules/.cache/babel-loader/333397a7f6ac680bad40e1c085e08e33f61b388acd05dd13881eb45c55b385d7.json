{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Time from '../../api/time';\nimport Random from '../../api/random';\nexport default {\n  namespaced: true,\n  state: {\n    //discussion\n    discussionList: [],\n    discussionId: '',\n    showReply: false,\n    DCurrentPage: 1,\n    DPageSize: 5,\n    //reply\n    replyList: [],\n    replyId: '',\n    RCurrentPage: 1,\n    RPageSize: 5,\n    hasReply: true,\n    //userid\n    uid: '',\n    isAdmin: '',\n    name: '',\n    //diaglog\n    dialogVisible: false\n  },\n  mutations: {\n    setDiscussionList(state, data) {\n      data.forEach((i, v) => {\n        i.time = Time.time(i.time);\n      });\n      state.discussionList = data;\n    },\n    addDiscussionList(state, data) {\n      data.time = Time.time(data.time);\n      data.user = {\n        'name': data.name\n      };\n      state.discussionList.push(data);\n    },\n    setDid(state, id) {\n      state.discussionId = id;\n    },\n    setShowReply(state, data) {\n      state.showReply = data;\n    },\n    //reply\n    setReplyList(state, data) {\n      //给有rid的列中的user添加user信息\n      data.forEach((i, v) => {\n        if (i.rid) {\n          //再循环\n          data.forEach((subi, subv) => {\n            //找到父回复\n            if (i.rid == subi.id) {\n              i.fatherUser = subi.user;\n            }\n          });\n        }\n        i.time = Time.time(i.time);\n      });\n      state.replyList = data;\n    },\n    addReplyList(state, data) {\n      if (data.rid) {\n        data.time = Time.time(data.time);\n        data.fatherReply.time = Time.time(data.fatherReply.time);\n      }\n      state.replyList.push(data);\n    },\n    deleteReply(state, id) {\n      //查找所有回复，找到的回复的rid==id，删除\n      function getAndDelete(id) {\n        console.log('当前id:' + id);\n        state.replyList.for;\n        db.query(reply.getSubReply(id), function (err, result) {\n          if (err) return res.send(err);\n          if (result.length == 0) {\n            //说明再该回复下没有子回复，不需要再执行 \n            //直接删除\n            // deleteReply(id)\n          } else {\n            //把result中的id取出,再次执行该函数\n            result.forEach((i, v) => {\n              getAndDelete(i.id);\n            });\n            // deleteReply(id)\n          }\n        });\n      }\n\n      function deleteReply(id) {\n        //删除已查询的分支\n        db.query(reply.delete(id), function (err, result) {\n          if (err) return res.send(err);\n          if (result.affectedRows == 0) console.log({\n            status: 400,\n            data: {\n              msg: \"删除回复失败\"\n            }\n          });\n          console.log(`id为${id}的回复已删除`);\n        });\n      }\n    },\n    //reply-id\n    setRId(state, id) {\n      state.replyId = id;\n    },\n    setHasReply(state, data) {\n      state.hasReply = data;\n    },\n    setUid(state, id) {\n      state.uid = id;\n    },\n    setAdmin(state, num) {\n      state.isAdmin = num;\n    },\n    setName(state, str) {\n      state.name = str;\n    },\n    //page\n    setDCurrentPage(state, num) {\n      state.DCurrentPage = num;\n    },\n    setDPageSize(state, num) {\n      state.DPageSize = num;\n    },\n    setRCurrentPage(state, num) {\n      state.RCurrentPage = num;\n    },\n    setRPageSize(state, num) {\n      state.RPageSize = num;\n    },\n    //dialog\n    setDialogVisible(state, data) {\n      state.dialogVisible = data;\n    }\n  }\n};","map":{"version":3,"names":["Time","Random","namespaced","state","discussionList","discussionId","showReply","DCurrentPage","DPageSize","replyList","replyId","RCurrentPage","RPageSize","hasReply","uid","isAdmin","name","dialogVisible","mutations","setDiscussionList","data","forEach","i","v","time","addDiscussionList","user","push","setDid","id","setShowReply","setReplyList","rid","subi","subv","fatherUser","addReplyList","fatherReply","deleteReply","getAndDelete","console","log","for","db","query","reply","getSubReply","err","result","res","send","length","delete","affectedRows","status","msg","setRId","setHasReply","setUid","setAdmin","num","setName","str","setDCurrentPage","setDPageSize","setRCurrentPage","setRPageSize","setDialogVisible"],"sources":["C:/Users/29903/Desktop/毕业设计的各种准备/haidaoxiangmu/hias/src/store/Discussion/index.js"],"sourcesContent":["import Time from '../../api/time'\r\nimport Random from '../../api/random'\r\nexport default {\r\n    namespaced:true,\r\n    state:{\r\n        //discussion\r\n        discussionList:[],\r\n        discussionId:'',\r\n        showReply:false,\r\n\r\n        DCurrentPage:1,\r\n        DPageSize:5,\r\n\r\n        //reply\r\n        replyList:[],\r\n        replyId:'',\r\n        RCurrentPage:1,\r\n        RPageSize:5,\r\n        hasReply:true,\r\n\r\n        //userid\r\n        uid:'',\r\n        isAdmin:'',\r\n        name:'',\r\n\r\n        //diaglog\r\n        dialogVisible:false,\r\n    },\r\n    mutations:{\r\n        setDiscussionList(state,data){\r\n            data.forEach((i,v)=>{\r\n                i.time=Time.time(i.time)\r\n            })\r\n\r\n            state.discussionList=data\r\n        },\r\n        addDiscussionList(state,data){\r\n            data.time=Time.time(data.time)\r\n            data.user={\r\n                'name':data.name\r\n            }\r\n            \r\n            state.discussionList.push(data)\r\n        },\r\n        setDid(state,id){\r\n            state.discussionId=id\r\n        },\r\n        setShowReply(state,data){\r\n            state.showReply=data\r\n        },\r\n\r\n        //reply\r\n        setReplyList(state,data){\r\n            //给有rid的列中的user添加user信息\r\n            data.forEach((i,v)=>{\r\n                if(i.rid){\r\n                    //再循环\r\n                    data.forEach((subi,subv)=>{\r\n                        //找到父回复\r\n                        if(i.rid==subi.id){\r\n                            i.fatherUser=subi.user\r\n                        }\r\n                    })\r\n                    \r\n                }\r\n                i.time=Time.time(i.time)\r\n\r\n            })\r\n            state.replyList=data\r\n        },\r\n        addReplyList(state,data){\r\n            if(data.rid){\r\n                data.time=Time.time(data.time)\r\n                data.fatherReply.time=Time.time(data.fatherReply.time)\r\n            }\r\n            \r\n            state.replyList.push(data)\r\n        },\r\n        deleteReply(state,id){\r\n            \r\n                //查找所有回复，找到的回复的rid==id，删除\r\n                function getAndDelete(id){\r\n                    console.log('当前id:'+id);\r\n                    state.replyList.for\r\n                    db.query(reply.getSubReply(id),function(err,result){\r\n                        if(err)return res.send(err)\r\n            \r\n                        if(result.length==0){\r\n                            //说明再该回复下没有子回复，不需要再执行 \r\n                            //直接删除\r\n                            // deleteReply(id)\r\n            \r\n                        }else{\r\n                            //把result中的id取出,再次执行该函数\r\n                            result.forEach((i,v)=>{\r\n                                getAndDelete(i.id)\r\n                            })\r\n                            // deleteReply(id)\r\n            \r\n            \r\n                        }\r\n                    })\r\n                }\r\n                function deleteReply(id){\r\n                    //删除已查询的分支\r\n                    db.query(reply.delete(id),function(err,result){\r\n                        if(err)return res.send(err)\r\n                        if(result.affectedRows==0) console.log({status:400,data:{msg:\"删除回复失败\"}})\r\n                        \r\n                        console.log(`id为${id}的回复已删除`);\r\n                    })\r\n                }\r\n\r\n                \r\n            \r\n        },\r\n        //reply-id\r\n        setRId(state,id){\r\n            state.replyId=id\r\n        },\r\n        setHasReply(state,data){\r\n            state.hasReply=data\r\n        },\r\n        \r\n\r\n        setUid(state,id){\r\n            state.uid=id\r\n        },\r\n        setAdmin(state,num){\r\n            state.isAdmin=num\r\n        },\r\n        setName(state,str){\r\n            state.name=str\r\n        },\r\n\r\n\r\n        //page\r\n        setDCurrentPage(state,num){\r\n            state.DCurrentPage=num\r\n        },\r\n        setDPageSize(state,num){\r\n            state.DPageSize=num\r\n        },\r\n        setRCurrentPage(state,num){\r\n            state.RCurrentPage=num\r\n        },\r\n        setRPageSize(state,num){\r\n            state.RPageSize=num\r\n        },\r\n\r\n\r\n        //dialog\r\n        setDialogVisible(state,data){\r\n            state.dialogVisible=data\r\n        }\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}