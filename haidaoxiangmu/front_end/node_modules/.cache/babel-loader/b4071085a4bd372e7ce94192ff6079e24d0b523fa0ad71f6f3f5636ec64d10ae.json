{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport time from '../../api/time';\nexport default {\n  namespaced: true,\n  state: {\n    //共有属性\n    countyData: [{\n      id: 1,\n      county: '定海区'\n    }, {\n      id: 2,\n      county: '普陀区'\n    }, {\n      id: 3,\n      county: '岱山县'\n    }, {\n      id: 4,\n      county: '嵊泗县'\n    }],\n    townData: [],\n    villageData: [],\n    //以下为randomOwner属性\n    randomOwner: [],\n    //以下为pondsType属性\n    pondsType: [],\n    //以下为productsAO属性\n    productsAO: [],\n    //以下为townStatus属性\n    allProducts: [],\n    townStatus: [],\n    tableHead: ''\n  },\n  mutations: {\n    //共有属性\n    setTownData(state, data) {\n      if (data) {\n        localStorage.setItem('town', JSON.stringify(data));\n        state.townData = data;\n      } else {\n        state.townData = JSON.parse(localStorage.getItem('town'));\n      }\n    },\n    setVillageData(state, data) {\n      if (data) {\n        localStorage.setItem('village', JSON.stringify(data));\n        state.villageData = data;\n      } else {\n        state.villageData = JSON.parse(localStorage.getItem('village'));\n      }\n    },\n    setRandomOwner(state, data) {\n      setTimeout(() => {\n        data.forEach((i, v) => {\n          if (i.checkStatus == 0) {\n            i.checkStatus = '审核中';\n          } else if (i.checkStatus == 1) {\n            i.checkStatus = '已通过';\n          } else if (i.checkStatus == 2) {\n            i.checkStatus = '未通过';\n          }\n\n          //替换county\n          state.countyData.forEach((ci, cv) => {\n            if (i.county == ci.id) {\n              i.county = parseInt(i.county);\n              //新增一个值，表示county内容，\n              i.countyContent = ci.county;\n            }\n          });\n\n          //替换镇\n          state.townData.forEach((ti, tv) => {\n            if (i.town == ti.id) {\n              i.town = parseInt(i.town);\n              i.townContent = ti.town;\n            }\n          });\n          // //替换村\n          state.villageData.forEach((vi, vv) => {\n            if (i.village == vi.id) {\n              i.village = parseInt(i.village);\n              i.villageContent = vi.village;\n            }\n          });\n        });\n        state.randomOwner = data;\n      }, 100);\n    },\n    setPondsType(state, data) {\n      let pondsTypeArr = [];\n      setTimeout(() => {\n        data.forEach((i, v) => {\n          //新对象\n          let newPondItem = {\n            county: i.county,\n            town: i.town,\n            village: i.village,\n            seaArea: 0,\n            seaEstimateArea: 0,\n            freshWaterArea: 0,\n            freshWaterEstimateArea: 0,\n            totalArea: parseFloat(i.area),\n            totalEstimateArea: parseFloat(i.estimateArea)\n          };\n          if (pondsTypeArr.length == 0) {\n            //为空，将第一条数据插入\n            if (i.pondsType == '0') {\n              //海水\n              newPondItem.seaArea = parseFloat(i.area);\n              newPondItem.seaEstimateArea = parseFloat(i.estimateArea);\n              newPondItem.freshWaterArea = 0;\n              newPondItem.freshWaterEstimateArea = 0;\n            } else if (i.pondsType == '1') {\n              //淡水\n              newPondItem.seaArea = 0;\n              newPondItem.seaEstimateArea = 0;\n              newPondItem.freshWaterArea = parseFloat(i.area);\n              newPondItem.freshWaterEstimateArea = parseFloat(i.estimateArea);\n            }\n            pondsTypeArr.push(newPondItem);\n          } else {\n            //不为空\n            //查看当前项的village值是否和pondsTypeArr中的某一项相等，\n            //相等后，要根据池塘类型分类相加\n            let ifEqual = false;\n            pondsTypeArr.forEach((pi, pv) => {\n              if (pi.village == i.village) {\n                ifEqual = true;\n                if (i.pondsType == '0') {\n                  pi.seaArea += parseFloat(i.area);\n                  pi.seaEstimateArea += parseFloat(i.estimateArea);\n                } else if (i.pondsType == '1') {\n                  pi.freshWaterArea += parseFloat(i.area);\n                  pi.freshWaterEstimateArea += parseFloat(i.estimateArea);\n                }\n                //总面积\n                pi.totalArea += parseFloat(i.area);\n                pi.totalEstimateArea += parseFloat(i.estimateArea);\n                return;\n              }\n            });\n            if (!ifEqual) {\n              //不存在相等的，插入新对象\n              if (i.pondsType == '0') {\n                //海水\n                newPondItem.seaArea = parseFloat(i.area);\n                newPondItem.seaEstimateArea = parseFloat(i.estimateArea);\n                newPondItem.freshWaterArea = 0;\n                newPondItem.freshWaterEstimateArea = 0;\n              } else if (i.pondsType == '1') {\n                //淡水\n                newPondItem.seaArea = 0;\n                newPondItem.seaEstimateArea = 0;\n                newPondItem.freshWaterArea = parseFloat(i.area);\n                newPondItem.freshWaterEstimateArea = parseFloat(i.estimateArea);\n              }\n              pondsTypeArr.push(newPondItem);\n            }\n          }\n        });\n        pondsTypeArr.forEach((i, v) => {\n          //替换county\n          state.countyData.forEach((ci, cv) => {\n            if (i.county == ci.id) {\n              i.county = parseInt(i.county);\n              //新增一个值，表示county内容，\n              i.countyContent = ci.county;\n            }\n          });\n          //替换镇\n          state.townData.forEach((ti, tv) => {\n            if (i.town == ti.id) {\n              i.town = parseInt(i.town);\n              i.townContent = ti.town;\n            }\n          });\n          //替换村\n          state.villageData.forEach((vi, vv) => {\n            if (i.village == vi.id) {\n              i.village = parseInt(i.village);\n              i.villageContent = vi.village;\n            }\n          });\n        });\n        state.pondsType = pondsTypeArr;\n      }, 100);\n    },\n    setProductsAO(state, data) {\n      let productsAOArr = [];\n      setTimeout(() => {\n        data.forEach((i, v) => {\n          //新对象\n          let newProductItem = {\n            county: i.county,\n            town: i.town,\n            village: i.village,\n            productId: i.productId,\n            product: i.product.name,\n            area: parseFloat(i.area),\n            productOutput: parseFloat(i.productOutput)\n          };\n          if (productsAOArr.length == 0) {\n            productsAOArr.push(newProductItem);\n          } else {\n            let ifEqual = false;\n            productsAOArr.forEach((pi, pv) => {\n              //村id和产品id相等，才能相加\n              if (pi.village == i.village && pi.productId == i.productId) {\n                ifEqual = true;\n                pi.area += parseFloat(i.area);\n                pi.productOutput += parseFloat(i.productOutput);\n                return;\n              }\n            });\n            if (!ifEqual) {\n              //不存在相等的，插入新对象\n              productsAOArr.push(newProductItem);\n            }\n          }\n        });\n        productsAOArr.forEach((i, v) => {\n          //替换county\n          state.countyData.forEach((ci, cv) => {\n            if (i.county == ci.id) {\n              i.county = parseInt(i.county);\n              //新增一个值，表示county内容，\n              i.countyContent = ci.county;\n            }\n          });\n          //替换镇\n          state.townData.forEach((ti, tv) => {\n            if (i.town == ti.id) {\n              i.town = parseInt(i.town);\n              i.townContent = ti.town;\n            }\n          });\n          //替换村\n          state.villageData.forEach((vi, vv) => {\n            if (i.village == vi.id) {\n              i.village = parseInt(i.village);\n              i.villageContent = vi.village;\n            }\n          });\n        });\n        state.productsAO = productsAOArr;\n      }, 100);\n\n      // state.productsAO=data\n    },\n\n    setAllProducts(state, data) {\n      state.allProducts = data;\n    },\n    setTownStatus(state, data) {\n      let newTownStatus = [];\n      setTimeout(() => {\n        //生成新数组\n        state.allProducts.forEach((pi, pv) => {\n          let newItem = {\n            id: pi.id,\n            name: pi.name,\n            area: 0,\n            productOutput: 0\n          };\n          newTownStatus.push(newItem);\n        });\n        //新数组循环\n        if (!data) {} else {\n          data.forEach((i, v) => {\n            newTownStatus.forEach((ni, nv) => {\n              // console.log(i.id,ni.id);\n              //相等就相加\n              if (ni.id == i.productId) {\n                ni.area += parseFloat(i.area);\n                ni.productOutput += parseFloat(i.productOutput);\n              }\n            });\n          });\n        }\n        state.townStatus = newTownStatus;\n      }, 100);\n    },\n    setTableHead(state, data) {\n      let tableHead = '';\n      state.countyData.forEach((ci, cv) => {\n        if (data.county == '') {\n          return;\n        } else {\n          if (ci.id == data.county) {\n            tableHead += ci.county;\n          }\n        }\n      });\n      state.townData.forEach((ti, tv) => {\n        if (data.town == '') {\n          return;\n        } else {\n          if (ti.id == data.town) {\n            tableHead += ti.town;\n          }\n        }\n      });\n      state.villageData.forEach((ci, cv) => {\n        if (data.village == '') {\n          return;\n        } else {\n          if (ci.id == data.county) {\n            tableHead += ci.county;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["time","namespaced","state","countyData","id","county","townData","villageData","randomOwner","pondsType","productsAO","allProducts","townStatus","tableHead","mutations","setTownData","data","localStorage","setItem","JSON","stringify","parse","getItem","setVillageData","setRandomOwner","setTimeout","forEach","i","v","checkStatus","ci","cv","parseInt","countyContent","ti","tv","town","townContent","vi","vv","village","villageContent","setPondsType","pondsTypeArr","newPondItem","seaArea","seaEstimateArea","freshWaterArea","freshWaterEstimateArea","totalArea","parseFloat","area","totalEstimateArea","estimateArea","length","push","ifEqual","pi","pv","setProductsAO","productsAOArr","newProductItem","productId","product","name","productOutput","setAllProducts","setTownStatus","newTownStatus","newItem","ni","nv","setTableHead"],"sources":["C:/Users/29903/Desktop/毕业设计的各种准备/haidaoxiangmu/hias/src/store/Statistic/index.js"],"sourcesContent":["import time from '../../api/time'\r\nexport default {\r\n    namespaced:true,\r\n    state:{\r\n        //共有属性\r\n        countyData:[\r\n            {\r\n                id: 1,\r\n                county: '定海区'\r\n            }, \r\n            {\r\n                id: 2,\r\n                county: '普陀区'\r\n            }, \r\n            {\r\n                id: 3,\r\n                county: '岱山县'\r\n            }, \r\n            {\r\n                id: 4,\r\n                county: '嵊泗县'\r\n            }, \r\n        ],\r\n        townData:[],\r\n        villageData:[],\r\n        //以下为randomOwner属性\r\n        randomOwner:[],\r\n\r\n        //以下为pondsType属性\r\n        pondsType:[],\r\n\r\n        //以下为productsAO属性\r\n        productsAO:[],\r\n\r\n        //以下为townStatus属性\r\n        allProducts:[],\r\n        townStatus:[],\r\n        tableHead:'',\r\n\r\n    },\r\n    mutations:{\r\n        //共有属性\r\n        setTownData(state,data){\r\n            if(data){\r\n                localStorage.setItem('town',JSON.stringify(data))\r\n                state.townData=data\r\n            }else{\r\n                state.townData=JSON.parse(localStorage.getItem('town'))\r\n            }\r\n        },\r\n        setVillageData(state,data){\r\n            if(data){\r\n                localStorage.setItem('village',JSON.stringify(data))\r\n                state.villageData=data\r\n            }else{\r\n                state.villageData=JSON.parse(localStorage.getItem('village'))\r\n            }\r\n        },\r\n\r\n\r\n        setRandomOwner(state,data){\r\n            setTimeout(()=>{\r\n                data.forEach((i,v)=>{\r\n                    if(i.checkStatus==0){\r\n                        i.checkStatus='审核中'\r\n                    }else if(i.checkStatus==1){\r\n                        i.checkStatus='已通过'\r\n                    }else if(i.checkStatus==2){\r\n                        i.checkStatus='未通过'\r\n                    }\r\n\r\n                    //替换county\r\n                    state.countyData.forEach((ci,cv)=>{\r\n                        if(i.county==ci.id){\r\n                            i.county=parseInt(i.county)\r\n                            //新增一个值，表示county内容，\r\n                            i.countyContent=ci.county\r\n                        }\r\n                    })\r\n                    \r\n                    //替换镇\r\n                    state.townData.forEach((ti,tv)=>{\r\n                        if(i.town==ti.id){\r\n                            i.town=parseInt(i.town)\r\n                            i.townContent=ti.town\r\n                        }\r\n                    })\r\n                    // //替换村\r\n                    state.villageData.forEach((vi,vv)=>{\r\n                        if(i.village==vi.id){\r\n                            i.village=parseInt(i.village)\r\n                            i.villageContent=vi.village\r\n                        }\r\n                    })\r\n\r\n                })\r\n                state.randomOwner=data\r\n            },100)\r\n\r\n            \r\n        },\r\n\r\n        setPondsType(state,data){\r\n            let pondsTypeArr=[]\r\n\r\n            setTimeout(()=>{\r\n                data.forEach((i,v)=>{\r\n                    //新对象\r\n                    let newPondItem={\r\n                        county:i.county,\r\n                        town:i.town,\r\n                        village:i.village,\r\n                        seaArea:0,\r\n                        seaEstimateArea:0,\r\n                        freshWaterArea:0,\r\n                        freshWaterEstimateArea:0,\r\n                        totalArea:parseFloat(i.area),\r\n                        totalEstimateArea:parseFloat(i.estimateArea),\r\n                    }\r\n                    if(pondsTypeArr.length==0){\r\n                        //为空，将第一条数据插入\r\n                        if(i.pondsType=='0'){\r\n                            //海水\r\n                            newPondItem.seaArea=parseFloat(i.area)\r\n                            newPondItem.seaEstimateArea=parseFloat(i.estimateArea)\r\n                            newPondItem.freshWaterArea=0\r\n                            newPondItem.freshWaterEstimateArea=0\r\n                        }else if(i.pondsType=='1'){\r\n                            //淡水\r\n                            newPondItem.seaArea=0\r\n                            newPondItem.seaEstimateArea=0\r\n                            newPondItem.freshWaterArea=parseFloat(i.area)\r\n                            newPondItem.freshWaterEstimateArea=parseFloat(i.estimateArea)\r\n                        }\r\n                        pondsTypeArr.push(newPondItem)\r\n                    }else{\r\n                        //不为空\r\n                        //查看当前项的village值是否和pondsTypeArr中的某一项相等，\r\n                        //相等后，要根据池塘类型分类相加\r\n                        let ifEqual=false\r\n                        pondsTypeArr.forEach((pi,pv)=>{\r\n                            if(pi.village==i.village){\r\n                                ifEqual=true\r\n                                if(i.pondsType=='0'){\r\n                                    pi.seaArea+=parseFloat(i.area)\r\n                                    pi.seaEstimateArea+=parseFloat(i.estimateArea)\r\n                                }else if(i.pondsType=='1'){\r\n                                    pi.freshWaterArea+=parseFloat(i.area)\r\n                                    pi.freshWaterEstimateArea+=parseFloat(i.estimateArea)\r\n                                }\r\n                                //总面积\r\n                                pi.totalArea+=parseFloat(i.area)\r\n                                pi.totalEstimateArea+=parseFloat(i.estimateArea)\r\n                                return\r\n                            }\r\n                        })\r\n                        if(!ifEqual){\r\n                            //不存在相等的，插入新对象\r\n                            if(i.pondsType=='0'){\r\n                                //海水\r\n                                newPondItem.seaArea=parseFloat(i.area)\r\n                                newPondItem.seaEstimateArea=parseFloat(i.estimateArea)\r\n                                newPondItem.freshWaterArea=0\r\n                                newPondItem.freshWaterEstimateArea=0\r\n                            }else if(i.pondsType=='1'){\r\n                                //淡水\r\n                                newPondItem.seaArea=0\r\n                                newPondItem.seaEstimateArea=0\r\n                                newPondItem.freshWaterArea=parseFloat(i.area)\r\n                                newPondItem.freshWaterEstimateArea=parseFloat(i.estimateArea)\r\n                            }\r\n                            pondsTypeArr.push(newPondItem)\r\n                        }\r\n                    }\r\n                })\r\n                pondsTypeArr.forEach((i,v)=>{\r\n                    //替换county\r\n                    state.countyData.forEach((ci,cv)=>{\r\n                        if(i.county==ci.id){\r\n                            i.county=parseInt(i.county)\r\n                            //新增一个值，表示county内容，\r\n                            i.countyContent=ci.county\r\n                        }\r\n                    })\r\n                    //替换镇\r\n                    state.townData.forEach((ti,tv)=>{\r\n                        if(i.town==ti.id){\r\n                            i.town=parseInt(i.town)\r\n                            i.townContent=ti.town\r\n                        }\r\n                    })\r\n                    //替换村\r\n                    state.villageData.forEach((vi,vv)=>{\r\n                        if(i.village==vi.id){\r\n                            i.village=parseInt(i.village)\r\n                            i.villageContent=vi.village\r\n                        }\r\n                    })\r\n                })\r\n\r\n                state.pondsType=pondsTypeArr\r\n            },100)\r\n\r\n        },\r\n\r\n        setProductsAO(state,data){\r\n            let productsAOArr=[]\r\n            setTimeout(()=>{\r\n                data.forEach((i,v)=>{\r\n                    //新对象\r\n                    let newProductItem={\r\n                        county:i.county,\r\n                        town:i.town,\r\n                        village:i.village,\r\n                        productId:i.productId,\r\n                        product:i.product.name,\r\n                        area:parseFloat(i.area),\r\n                        productOutput:parseFloat(i.productOutput),\r\n                    }\r\n                    if(productsAOArr.length==0){\r\n                        productsAOArr.push(newProductItem)\r\n                    }else{\r\n                        let ifEqual=false\r\n                        productsAOArr.forEach((pi,pv)=>{\r\n                            //村id和产品id相等，才能相加\r\n                            if(pi.village==i.village&&pi.productId==i.productId){\r\n                                ifEqual=true\r\n                                pi.area+=parseFloat(i.area)\r\n                                pi.productOutput+=parseFloat(i.productOutput)\r\n                                return\r\n                            }\r\n                        })\r\n                        if(!ifEqual){\r\n                            //不存在相等的，插入新对象\r\n                            productsAOArr.push(newProductItem)\r\n                        }\r\n                    }\r\n                })\r\n\r\n                productsAOArr.forEach((i,v)=>{\r\n                    //替换county\r\n                    state.countyData.forEach((ci,cv)=>{\r\n                        if(i.county==ci.id){\r\n                            i.county=parseInt(i.county)\r\n                            //新增一个值，表示county内容，\r\n                            i.countyContent=ci.county\r\n                        }\r\n                    })\r\n                    //替换镇\r\n                    state.townData.forEach((ti,tv)=>{\r\n                        if(i.town==ti.id){\r\n                            i.town=parseInt(i.town)\r\n                            i.townContent=ti.town\r\n                        }\r\n                    })\r\n                    //替换村\r\n                    state.villageData.forEach((vi,vv)=>{\r\n                        if(i.village==vi.id){\r\n                            i.village=parseInt(i.village)\r\n                            i.villageContent=vi.village\r\n                        }\r\n                    })\r\n                })\r\n\r\n                state.productsAO=productsAOArr\r\n            },100)\r\n\r\n            // state.productsAO=data\r\n        },\r\n\r\n\r\n        setAllProducts(state,data){\r\n            state.allProducts=data\r\n        },\r\n        setTownStatus(state,data){\r\n            let newTownStatus=[]\r\n            setTimeout(()=>{\r\n                //生成新数组\r\n                state.allProducts.forEach((pi,pv)=>{\r\n                    let newItem={\r\n                        id:pi.id,\r\n                        name:pi.name,\r\n                        area:0,\r\n                        productOutput:0\r\n                    }\r\n                    newTownStatus.push(newItem)\r\n                })\r\n                //新数组循环\r\n                if(!data){\r\n\r\n                }else{\r\n                    data.forEach((i,v)=>{\r\n                        newTownStatus.forEach((ni,nv)=>{\r\n                            // console.log(i.id,ni.id);\r\n                            //相等就相加\r\n                            if(ni.id==i.productId){\r\n                                ni.area+=parseFloat(i.area)\r\n                                ni.productOutput+=parseFloat(i.productOutput)\r\n                                \r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            \r\n                state.townStatus=newTownStatus\r\n            },100)\r\n            \r\n        },\r\n        setTableHead(state,data){\r\n            let tableHead=''\r\n            state.countyData.forEach((ci,cv)=>{\r\n                if(data.county==''){\r\n                    return\r\n                }else{\r\n                    if(ci.id==data.county){\r\n                        tableHead+=ci.county\r\n                    }\r\n                }\r\n            })\r\n            state.townData.forEach((ti,tv)=>{\r\n                if(data.town==''){\r\n                    return\r\n                }else{\r\n                    if(ti.id==data.town){\r\n                        tableHead+=ti.town\r\n                    }\r\n                }\r\n            })\r\n            state.villageData.forEach((ci,cv)=>{\r\n                if(data.village==''){\r\n                    return\r\n                }else{\r\n                    if(ci.id==data.county){\r\n                        tableHead+=ci.county\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}