{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport time from '../../api/time';\nexport default {\n  namespaced: true,\n  state: {\n    //共有属性\n    countyData: [{\n      id: 1,\n      county: '定海区'\n    }, {\n      id: 2,\n      county: '普陀区'\n    }, {\n      id: 3,\n      county: '岱山县'\n    }, {\n      id: 4,\n      county: '嵊泗县'\n    }],\n    townData: [],\n    villageData: [],\n    //以下为randomOwner属性\n    randomOwner: [],\n    //以下为pondsType\n    pondsType: []\n  },\n  mutations: {\n    //共有属性\n    setTownData(state, data) {\n      if (data) {\n        localStorage.setItem('town', JSON.stringify(data));\n        state.townData = data;\n      } else {\n        state.townData = JSON.parse(localStorage.getItem('town'));\n      }\n    },\n    setVillageData(state, data) {\n      if (data) {\n        localStorage.setItem('village', JSON.stringify(data));\n        state.villageData = data;\n      } else {\n        state.villageData = JSON.parse(localStorage.getItem('village'));\n      }\n    },\n    setRandomOwner(state, data) {\n      setTimeout(() => {\n        data.forEach((i, v) => {\n          if (i.checkStatus == 0) {\n            i.checkStatus = '审核中';\n          } else if (i.checkStatus == 1) {\n            i.checkStatus = '已通过';\n          } else if (i.checkStatus == 2) {\n            i.checkStatus = '未通过';\n          }\n\n          //替换county\n          state.countyData.forEach((ci, cv) => {\n            if (i.county == ci.id) {\n              i.county = parseInt(i.county);\n              //新增一个值，表示county内容，\n              i.countyContent = ci.county;\n            }\n          });\n\n          //替换镇\n          state.townData.forEach((ti, tv) => {\n            if (i.town == ti.id) {\n              i.town = parseInt(i.town);\n              i.townContent = ti.town;\n            }\n          });\n          // //替换村\n          state.villageData.forEach((vi, vv) => {\n            if (i.village == vi.id) {\n              i.village = parseInt(i.village);\n              i.villageContent = vi.village;\n            }\n          });\n        });\n        state.randomOwner = data;\n      }, 100);\n    },\n    setPondsType(state, data) {\n      let pondsTypeArr = [];\n      setTimeout(() => {\n        data.forEach((i, v) => {\n          //新对象\n          let newPondItem = {\n            county: i.county,\n            town: i.town,\n            village: i.village,\n            seaArea: 0,\n            seaEstimateArea: 0,\n            freshWaterArea: 0,\n            freshWaterEstimateArea: 0,\n            totalArea: i.area,\n            totalEstimateArea: i.estimateArea\n          };\n          if (pondsTypeArr.length == 0) {\n            //为空，将第一条数据插入\n            if (i.pondsType == '0') {\n              //海水\n              newPondItem.seaArea = i.area;\n              newPondItem.seaEstimateArea = i.estimateArea;\n              newPondItem.freshWaterArea = 0;\n              newPondItem.freshWaterEstimateArea = 0;\n            } else if (i.pondsType == '1') {\n              //淡水\n              newPondItem.seaArea = 0;\n              newPondItem.seaEstimateArea = 0;\n              newPondItem.freshWaterArea = i.area;\n              newPondItem.freshWaterEstimateArea = i.estimateArea;\n            }\n            pondsTypeArr.push(newPondItem);\n          } else {\n            //不为空\n            //查看当前项的village值是否和pondsTypeArr中的某一项相等，\n            //相等后，要根据池塘类型分类相加\n            let ifEqual = false;\n            pondsTypeArr.forEach((pi, pv) => {\n              if (pi.village == i.village) {\n                ifEqual = true;\n                if (i.pondsType == '0') {\n                  pi.seaArea += i.area;\n                  pi.seaEstimateArea += i.estimateArea;\n                } else if (i.pondsType == '1') {\n                  pi.freshWaterArea += i.area;\n                  pi.freshWaterEstimateArea += i.estimateArea;\n                }\n                return;\n              }\n            });\n            if (!ifEqual) {}\n          }\n\n          // //替换county\n          // state.countyData.forEach((ci,cv)=>{\n          //     if(i.county==ci.id){\n          //         i.county=parseInt(i.county)\n          //         //新增一个值，表示county内容，\n          //         i.countyContent=ci.county\n          //     }\n          // })\n          // //替换镇\n          // state.townData.forEach((ti,tv)=>{\n          //     if(i.town==ti.id){\n          //         i.town=parseInt(i.town)\n          //         i.townContent=ti.town\n          //     }\n          // })\n          // //替换村\n          // state.villageData.forEach((vi,vv)=>{\n          //     if(i.village==vi.id){\n          //         i.village=parseInt(i.village)\n          //         i.villageContent=vi.village\n          //     }\n          // })\n        });\n\n        state.pondsType = data;\n      }, 100);\n    }\n  }\n};","map":{"version":3,"names":["time","namespaced","state","countyData","id","county","townData","villageData","randomOwner","pondsType","mutations","setTownData","data","localStorage","setItem","JSON","stringify","parse","getItem","setVillageData","setRandomOwner","setTimeout","forEach","i","v","checkStatus","ci","cv","parseInt","countyContent","ti","tv","town","townContent","vi","vv","village","villageContent","setPondsType","pondsTypeArr","newPondItem","seaArea","seaEstimateArea","freshWaterArea","freshWaterEstimateArea","totalArea","area","totalEstimateArea","estimateArea","length","push","ifEqual","pi","pv"],"sources":["C:/Users/29903/Desktop/毕业设计的各种准备/haidaoxiangmu/hias/src/store/Statistic/index.js"],"sourcesContent":["import time from '../../api/time'\r\nexport default {\r\n    namespaced:true,\r\n    state:{\r\n        //共有属性\r\n        countyData:[\r\n            {\r\n                id: 1,\r\n                county: '定海区'\r\n            }, \r\n            {\r\n                id: 2,\r\n                county: '普陀区'\r\n            }, \r\n            {\r\n                id: 3,\r\n                county: '岱山县'\r\n            }, \r\n            {\r\n                id: 4,\r\n                county: '嵊泗县'\r\n            }, \r\n        ],\r\n        townData:[],\r\n        villageData:[],\r\n        //以下为randomOwner属性\r\n        randomOwner:[],\r\n\r\n        //以下为pondsType\r\n        pondsType:[],\r\n    },\r\n    mutations:{\r\n        //共有属性\r\n        setTownData(state,data){\r\n            if(data){\r\n                localStorage.setItem('town',JSON.stringify(data))\r\n                state.townData=data\r\n            }else{\r\n                state.townData=JSON.parse(localStorage.getItem('town'))\r\n            }\r\n        },\r\n        setVillageData(state,data){\r\n            if(data){\r\n                localStorage.setItem('village',JSON.stringify(data))\r\n                state.villageData=data\r\n            }else{\r\n                state.villageData=JSON.parse(localStorage.getItem('village'))\r\n            }\r\n        },\r\n\r\n\r\n        setRandomOwner(state,data){\r\n            setTimeout(()=>{\r\n                data.forEach((i,v)=>{\r\n                    if(i.checkStatus==0){\r\n                        i.checkStatus='审核中'\r\n                    }else if(i.checkStatus==1){\r\n                        i.checkStatus='已通过'\r\n                    }else if(i.checkStatus==2){\r\n                        i.checkStatus='未通过'\r\n                    }\r\n\r\n                    //替换county\r\n                    state.countyData.forEach((ci,cv)=>{\r\n                        if(i.county==ci.id){\r\n                            i.county=parseInt(i.county)\r\n                            //新增一个值，表示county内容，\r\n                            i.countyContent=ci.county\r\n                        }\r\n                    })\r\n                    \r\n                    //替换镇\r\n                    state.townData.forEach((ti,tv)=>{\r\n                        if(i.town==ti.id){\r\n                            i.town=parseInt(i.town)\r\n                            i.townContent=ti.town\r\n                        }\r\n                    })\r\n                    // //替换村\r\n                    state.villageData.forEach((vi,vv)=>{\r\n                        if(i.village==vi.id){\r\n                            i.village=parseInt(i.village)\r\n                            i.villageContent=vi.village\r\n                        }\r\n                    })\r\n\r\n                })\r\n                state.randomOwner=data\r\n            },100)\r\n\r\n            \r\n        },\r\n\r\n        setPondsType(state,data){\r\n            let pondsTypeArr=[]\r\n\r\n            setTimeout(()=>{\r\n                data.forEach((i,v)=>{\r\n                    //新对象\r\n                    let newPondItem={\r\n                        county:i.county,\r\n                        town:i.town,\r\n                        village:i.village,\r\n                        seaArea:0,\r\n                        seaEstimateArea:0,\r\n                        freshWaterArea:0,\r\n                        freshWaterEstimateArea:0,\r\n                        totalArea:i.area,\r\n                        totalEstimateArea:i.estimateArea,\r\n                    }\r\n                    if(pondsTypeArr.length==0){\r\n                        //为空，将第一条数据插入\r\n                        if(i.pondsType=='0'){\r\n                            //海水\r\n                            newPondItem.seaArea=i.area\r\n                            newPondItem.seaEstimateArea=i.estimateArea\r\n                            newPondItem.freshWaterArea=0\r\n                            newPondItem.freshWaterEstimateArea=0\r\n                        }else if(i.pondsType=='1'){\r\n                            //淡水\r\n                            newPondItem.seaArea=0\r\n                            newPondItem.seaEstimateArea=0\r\n                            newPondItem.freshWaterArea=i.area\r\n                            newPondItem.freshWaterEstimateArea=i.estimateArea\r\n                        }\r\n                        pondsTypeArr.push(newPondItem)\r\n                    }else{\r\n                        //不为空\r\n                        //查看当前项的village值是否和pondsTypeArr中的某一项相等，\r\n                        //相等后，要根据池塘类型分类相加\r\n                        let ifEqual=false\r\n                        pondsTypeArr.forEach((pi,pv)=>{\r\n                            if(pi.village==i.village){\r\n                                ifEqual=true\r\n                                if(i.pondsType=='0'){\r\n                                    pi.seaArea+=i.area\r\n                                    pi.seaEstimateArea+=i.estimateArea\r\n                                }else if(i.pondsType=='1'){\r\n                                    pi.freshWaterArea+=i.area\r\n                                    pi.freshWaterEstimateArea+=i.estimateArea\r\n                                }\r\n                                return\r\n                            }\r\n                        })\r\n                        if(!ifEqual){\r\n                            \r\n                        }\r\n                    }\r\n                    \r\n\r\n\r\n\r\n                    // //替换county\r\n                    // state.countyData.forEach((ci,cv)=>{\r\n                    //     if(i.county==ci.id){\r\n                    //         i.county=parseInt(i.county)\r\n                    //         //新增一个值，表示county内容，\r\n                    //         i.countyContent=ci.county\r\n                    //     }\r\n                    // })\r\n                    // //替换镇\r\n                    // state.townData.forEach((ti,tv)=>{\r\n                    //     if(i.town==ti.id){\r\n                    //         i.town=parseInt(i.town)\r\n                    //         i.townContent=ti.town\r\n                    //     }\r\n                    // })\r\n                    // //替换村\r\n                    // state.villageData.forEach((vi,vv)=>{\r\n                    //     if(i.village==vi.id){\r\n                    //         i.village=parseInt(i.village)\r\n                    //         i.villageContent=vi.village\r\n                    //     }\r\n                    // })\r\n                })\r\n\r\n                state.pondsType=data\r\n            },100)\r\n\r\n            \r\n        }\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}