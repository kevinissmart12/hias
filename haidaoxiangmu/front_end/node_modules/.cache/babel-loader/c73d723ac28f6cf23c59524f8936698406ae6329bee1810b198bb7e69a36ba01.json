{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @file 鼠标绘制管理类\n * @description 避免用户没有手动清除，全局记录全部和当前绘制的图形，及时清除mask等\n * @author dengshufang01 [Flora]\n */\n\nimport { DrawStatus, OperateEventType } from '../constant/drawingType';\nimport { DEFAULT_SCENE_OPTIONS } from '../constant/baseOptions';\nimport { MapSelect } from '../select/map-select';\nimport { Operate } from '../operate/operate';\nimport { BaseEvent } from './base-event';\nimport { DrawMask } from './draw-mask';\nimport { baidu } from '../utils/baidu';\nexport var DrawScene = /*#__PURE__*/function (_BaseEvent) {\n  _inherits(DrawScene, _BaseEvent);\n  var _super = _createSuper(DrawScene);\n  function DrawScene(map) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, DrawScene);\n    _this = _super.call(this);\n    _this.isOpen = void 0;\n    _this.drawType = void 0;\n    _this.instances = [];\n    _this.selectInstance = [];\n    _this.mask = void 0;\n    _this.map = void 0;\n    _this.operate = void 0;\n    _this._currentStatus = DrawStatus.STATUS_FREE;\n    _this._runningAction = null;\n    if (!(map instanceof BMapGL.Map)) {\n      throw Error('Scene实例化必须输入map参数');\n    }\n    _this.options = {};\n    baidu.deepCopy(DEFAULT_SCENE_OPTIONS, 2, _this.options, 0, [Operate]);\n    baidu.copyOptions(_this.options, options, [Operate]);\n    _this.map = map;\n    _this.mask = new DrawMask(map, _this.options.drawCursor);\n    _this.operate = _this.options.operate || new Operate(map);\n    // 防止后续的实现类对Operate拷贝操作出现问题\n    if (_this.options.operate) {\n      _this.options.operate.ignore = true;\n    }\n    _this.addMapListener(map);\n    return _this;\n  }\n\n  // 挂载地图事件\n  _createClass(DrawScene, [{\n    key: \"currentStatus\",\n    get:\n    // 绘制状态是否开启\n    // 当前绘制图形类型\n    // 绘制的所有图形实例\n    // 选择绘制的上图实例\n    // 遮罩\n    // 地图实例\n    // operate实例\n    // 当前状态\n    // 当前交互对象\n\n    function get() {\n      return this._currentStatus;\n    },\n    set: function set(status) {\n      this._currentStatus = status;\n      this.updateMapListenerControl(status);\n    }\n  }, {\n    key: \"runningAction\",\n    get: function get() {\n      return this._runningAction;\n    },\n    set: function set(action) {\n      this._runningAction = action;\n    }\n  }, {\n    key: \"addMapListener\",\n    value: function addMapListener(map) {\n      var _this2 = this;\n      this.mapSelect = new MapSelect(map);\n      this.mapSelect.addEventListener(OperateEventType.CLICK, function (e) {\n        if (_this2._currentStatus !== DrawStatus.STATUS_MOVE) {\n          _this2.dispatchEvent(e);\n        }\n      });\n      this.mapSelect.addEventListener(OperateEventType.RIGHTCLICK, function (e) {\n        if (_this2._currentStatus !== DrawStatus.STATUS_MOVE) {\n          _this2.dispatchEvent(e);\n        }\n      });\n      // 绘制、编辑状态下，不对外发送move事件\n      this.mapSelect.addEventListener(OperateEventType.MOVE, function (e) {\n        if (_this2._currentStatus !== DrawStatus.STATUS_DRAWING && _this2._currentStatus !== DrawStatus.STATUS_EDITER && _this2._currentStatus !== DrawStatus.STATUS_MOVE) {\n          _this2.dispatchEvent(e);\n        }\n      });\n    }\n  }, {\n    key: \"updateMapListenerControl\",\n    value: function updateMapListenerControl(status) {\n      if (!this.mapSelect) {\n        return;\n      }\n      switch (status) {\n        case DrawStatus.STATUS_FREE:\n          this.mapSelect.open();\n          break;\n        case DrawStatus.STATUS_EDITER:\n          this.mapSelect.openClick();\n          this.mapSelect.openMouse();\n          break;\n        case DrawStatus.STATUS_DRAWING:\n          this.mapSelect.closeClick();\n          this.mapSelect.openMouse();\n          break;\n        case DrawStatus.STATUS_MOVE:\n          this.mapSelect.closeClick();\n          this.mapSelect.openMouse();\n          break;\n        default:\n          this.mapSelect.open();\n          break;\n      }\n    }\n\n    /**\n    * 开启地图绘制模式状态\n    */\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.isOpen = true;\n      if (!this.mask) {\n        this.mask = new DrawMask(this.map, this.options.drawCursor);\n      }\n      this.map.addOverlay(this.mask);\n      this.setCurrentDrawType(this.drawType);\n      return true;\n    }\n\n    /**\n     * 关闭地图绘制模式状态\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      var changeStatus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.isOpen = false;\n      this.closeRunningAction();\n      if (changeStatus) {\n        this.currentStatus = DrawStatus.STATUS_FREE;\n      }\n      if (this.mask) {\n        this.map.removeOverlay(this.mask);\n      }\n    }\n\n    /**\n     * 清除当前交互状态（内部）\n    */\n  }, {\n    key: \"closeRunningAction\",\n    value: function closeRunningAction() {\n      if (this.runningAction && this.runningAction.close instanceof Function) {\n        this.runningAction.close();\n      }\n    }\n\n    /**\n     * 添加覆盖物到场景instances中\n     * @param overlay\n    */\n  }, {\n    key: \"addOverlay\",\n    value: function addOverlay(overlay) {\n      var hasExit = this.instances.find(function (item) {\n        return item === overlay;\n      });\n      if (!hasExit) {\n        this.instances.push(overlay);\n      }\n    }\n\n    /**\n     * 移除覆盖物\n     * @param overlay\n    */\n  }, {\n    key: \"removeOverlay\",\n    value: function removeOverlay(overlay) {\n      var hasIndex = this.instances.findIndex(function (item) {\n        return item === overlay;\n      });\n      if (hasIndex !== -1) {\n        this.map.removeOverlay(this.instances[hasIndex]);\n        this.instances.splice(hasIndex);\n      }\n    }\n\n    /**\n     * 清空所有覆盖物\n    */\n  }, {\n    key: \"clearData\",\n    value: function clearData() {\n      var _this3 = this;\n      this.instances.forEach(function (element) {\n        _this3.map.removeOverlay(element);\n      });\n      this.instances.length = 0;\n    }\n\n    /**\n     * 添加选择覆盖物\n     * @param overlay\n    */\n  }, {\n    key: \"addSelectDrawData\",\n    value: function addSelectDrawData(overlay) {\n      var hasExit = this.selectInstance.find(function (item) {\n        return item === overlay;\n      });\n      if (!hasExit) {\n        this.selectInstance.push(overlay);\n      }\n    }\n\n    /**\n     * 判断场景内有无此覆盖物\n    */\n  }, {\n    key: \"hasOverlay\",\n    value: function hasOverlay(overlay) {\n      var hasIndex = this.instances.findIndex(function (item) {\n        return item === overlay;\n      });\n      if (hasIndex > -1) {\n        return true;\n      }\n      hasIndex = this.selectInstance.findIndex(function (item) {\n        return item === overlay;\n      });\n      if (hasIndex > -1) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"clearSelectDrawData\",\n    value: function clearSelectDrawData() {\n      var _this4 = this;\n      this.selectInstance.forEach(function (element) {\n        _this4.map.removeOverlay(element);\n      });\n      this.selectInstance.length = 0;\n    }\n\n    /**\n     * 设置绘制类型\n     */\n  }, {\n    key: \"setCurrentDrawType\",\n    value: function setCurrentDrawType(type) {\n      this.drawType = type;\n    }\n\n    // 挂载外部吸附数据\n  }, {\n    key: \"attachSnapSource\",\n    value: function attachSnapSource(datas) {\n      this._attachSnapSource = datas;\n    }\n\n    // 设置绘制时鼠标样式\n  }, {\n    key: \"setDrawCursor\",\n    value: function setDrawCursor(cursor) {\n      if (this.mask) {\n        this.mask.setCursor(cursor);\n      }\n    }\n  }]);\n  return DrawScene;\n}(BaseEvent);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","DrawStatus","OperateEventType","DEFAULT_SCENE_OPTIONS","MapSelect","Operate","BaseEvent","DrawMask","baidu","DrawScene","_BaseEvent","_super","map","_this","options","undefined","isOpen","drawType","instances","selectInstance","mask","operate","_currentStatus","STATUS_FREE","_runningAction","BMapGL","Map","Error","deepCopy","copyOptions","drawCursor","ignore","addMapListener","get","set","status","updateMapListenerControl","action","_this2","mapSelect","addEventListener","CLICK","STATUS_MOVE","dispatchEvent","RIGHTCLICK","MOVE","STATUS_DRAWING","STATUS_EDITER","open","openClick","openMouse","closeClick","addOverlay","setCurrentDrawType","close","changeStatus","closeRunningAction","currentStatus","removeOverlay","runningAction","Function","overlay","hasExit","find","item","push","hasIndex","findIndex","splice","clearData","_this3","forEach","element","addSelectDrawData","hasOverlay","clearSelectDrawData","_this4","type","attachSnapSource","datas","_attachSnapSource","setDrawCursor","cursor","setCursor"],"sources":["C:/Users/29903/Desktop/毕业设计的各种准备/haidaoxiangmu/hias/node_modules/bmap-draw/es/common/draw-scene.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * @file 鼠标绘制管理类\n * @description 避免用户没有手动清除，全局记录全部和当前绘制的图形，及时清除mask等\n * @author dengshufang01 [Flora]\n */\n\nimport { DrawStatus, OperateEventType } from '../constant/drawingType';\nimport { DEFAULT_SCENE_OPTIONS } from '../constant/baseOptions';\nimport { MapSelect } from '../select/map-select';\nimport { Operate } from '../operate/operate';\nimport { BaseEvent } from './base-event';\nimport { DrawMask } from './draw-mask';\nimport { baidu } from '../utils/baidu';\nexport var DrawScene = /*#__PURE__*/function (_BaseEvent) {\n  _inherits(DrawScene, _BaseEvent);\n  var _super = _createSuper(DrawScene);\n  function DrawScene(map) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, DrawScene);\n    _this = _super.call(this);\n    _this.isOpen = void 0;\n    _this.drawType = void 0;\n    _this.instances = [];\n    _this.selectInstance = [];\n    _this.mask = void 0;\n    _this.map = void 0;\n    _this.operate = void 0;\n    _this._currentStatus = DrawStatus.STATUS_FREE;\n    _this._runningAction = null;\n    if (!(map instanceof BMapGL.Map)) {\n      throw Error('Scene实例化必须输入map参数');\n    }\n    _this.options = {};\n    baidu.deepCopy(DEFAULT_SCENE_OPTIONS, 2, _this.options, 0, [Operate]);\n    baidu.copyOptions(_this.options, options, [Operate]);\n    _this.map = map;\n    _this.mask = new DrawMask(map, _this.options.drawCursor);\n    _this.operate = _this.options.operate || new Operate(map);\n    // 防止后续的实现类对Operate拷贝操作出现问题\n    if (_this.options.operate) {\n      _this.options.operate.ignore = true;\n    }\n    _this.addMapListener(map);\n    return _this;\n  }\n\n  // 挂载地图事件\n  _createClass(DrawScene, [{\n    key: \"currentStatus\",\n    get:\n    // 绘制状态是否开启\n    // 当前绘制图形类型\n    // 绘制的所有图形实例\n    // 选择绘制的上图实例\n    // 遮罩\n    // 地图实例\n    // operate实例\n    // 当前状态\n    // 当前交互对象\n\n    function get() {\n      return this._currentStatus;\n    },\n    set: function set(status) {\n      this._currentStatus = status;\n      this.updateMapListenerControl(status);\n    }\n  }, {\n    key: \"runningAction\",\n    get: function get() {\n      return this._runningAction;\n    },\n    set: function set(action) {\n      this._runningAction = action;\n    }\n  }, {\n    key: \"addMapListener\",\n    value: function addMapListener(map) {\n      var _this2 = this;\n      this.mapSelect = new MapSelect(map);\n      this.mapSelect.addEventListener(OperateEventType.CLICK, function (e) {\n        if (_this2._currentStatus !== DrawStatus.STATUS_MOVE) {\n          _this2.dispatchEvent(e);\n        }\n      });\n      this.mapSelect.addEventListener(OperateEventType.RIGHTCLICK, function (e) {\n        if (_this2._currentStatus !== DrawStatus.STATUS_MOVE) {\n          _this2.dispatchEvent(e);\n        }\n      });\n      // 绘制、编辑状态下，不对外发送move事件\n      this.mapSelect.addEventListener(OperateEventType.MOVE, function (e) {\n        if (_this2._currentStatus !== DrawStatus.STATUS_DRAWING && _this2._currentStatus !== DrawStatus.STATUS_EDITER && _this2._currentStatus !== DrawStatus.STATUS_MOVE) {\n          _this2.dispatchEvent(e);\n        }\n      });\n    }\n  }, {\n    key: \"updateMapListenerControl\",\n    value: function updateMapListenerControl(status) {\n      if (!this.mapSelect) {\n        return;\n      }\n      switch (status) {\n        case DrawStatus.STATUS_FREE:\n          this.mapSelect.open();\n          break;\n        case DrawStatus.STATUS_EDITER:\n          this.mapSelect.openClick();\n          this.mapSelect.openMouse();\n          break;\n        case DrawStatus.STATUS_DRAWING:\n          this.mapSelect.closeClick();\n          this.mapSelect.openMouse();\n          break;\n        case DrawStatus.STATUS_MOVE:\n          this.mapSelect.closeClick();\n          this.mapSelect.openMouse();\n          break;\n        default:\n          this.mapSelect.open();\n          break;\n      }\n    }\n\n    /**\n    * 开启地图绘制模式状态\n    */\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.isOpen = true;\n      if (!this.mask) {\n        this.mask = new DrawMask(this.map, this.options.drawCursor);\n      }\n      this.map.addOverlay(this.mask);\n      this.setCurrentDrawType(this.drawType);\n      return true;\n    }\n\n    /**\n     * 关闭地图绘制模式状态\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      var changeStatus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.isOpen = false;\n      this.closeRunningAction();\n      if (changeStatus) {\n        this.currentStatus = DrawStatus.STATUS_FREE;\n      }\n      if (this.mask) {\n        this.map.removeOverlay(this.mask);\n      }\n    }\n\n    /**\n     * 清除当前交互状态（内部）\n    */\n  }, {\n    key: \"closeRunningAction\",\n    value: function closeRunningAction() {\n      if (this.runningAction && this.runningAction.close instanceof Function) {\n        this.runningAction.close();\n      }\n    }\n\n    /**\n     * 添加覆盖物到场景instances中\n     * @param overlay\n    */\n  }, {\n    key: \"addOverlay\",\n    value: function addOverlay(overlay) {\n      var hasExit = this.instances.find(function (item) {\n        return item === overlay;\n      });\n      if (!hasExit) {\n        this.instances.push(overlay);\n      }\n    }\n\n    /**\n     * 移除覆盖物\n     * @param overlay\n    */\n  }, {\n    key: \"removeOverlay\",\n    value: function removeOverlay(overlay) {\n      var hasIndex = this.instances.findIndex(function (item) {\n        return item === overlay;\n      });\n      if (hasIndex !== -1) {\n        this.map.removeOverlay(this.instances[hasIndex]);\n        this.instances.splice(hasIndex);\n      }\n    }\n\n    /**\n     * 清空所有覆盖物\n    */\n  }, {\n    key: \"clearData\",\n    value: function clearData() {\n      var _this3 = this;\n      this.instances.forEach(function (element) {\n        _this3.map.removeOverlay(element);\n      });\n      this.instances.length = 0;\n    }\n\n    /**\n     * 添加选择覆盖物\n     * @param overlay\n    */\n  }, {\n    key: \"addSelectDrawData\",\n    value: function addSelectDrawData(overlay) {\n      var hasExit = this.selectInstance.find(function (item) {\n        return item === overlay;\n      });\n      if (!hasExit) {\n        this.selectInstance.push(overlay);\n      }\n    }\n\n    /**\n     * 判断场景内有无此覆盖物\n    */\n  }, {\n    key: \"hasOverlay\",\n    value: function hasOverlay(overlay) {\n      var hasIndex = this.instances.findIndex(function (item) {\n        return item === overlay;\n      });\n      if (hasIndex > -1) {\n        return true;\n      }\n      hasIndex = this.selectInstance.findIndex(function (item) {\n        return item === overlay;\n      });\n      if (hasIndex > -1) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"clearSelectDrawData\",\n    value: function clearSelectDrawData() {\n      var _this4 = this;\n      this.selectInstance.forEach(function (element) {\n        _this4.map.removeOverlay(element);\n      });\n      this.selectInstance.length = 0;\n    }\n\n    /**\n     * 设置绘制类型\n     */\n  }, {\n    key: \"setCurrentDrawType\",\n    value: function setCurrentDrawType(type) {\n      this.drawType = type;\n    }\n\n    // 挂载外部吸附数据\n  }, {\n    key: \"attachSnapSource\",\n    value: function attachSnapSource(datas) {\n      this._attachSnapSource = datas;\n    }\n\n    // 设置绘制时鼠标样式\n  }, {\n    key: \"setDrawCursor\",\n    value: function setDrawCursor(cursor) {\n      if (this.mask) {\n        this.mask.setCursor(cursor);\n      }\n    }\n  }]);\n  return DrawScene;\n}(BaseEvent);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}