{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/**\n * @file 获取几何体面积或长度\n * @author dengshufang01 [Flora]\n */\n\nimport { GeoCalculator } from '../calculate/geo-calculator';\nexport var Measure = /*#__PURE__*/function () {\n  function Measure(scene, opts) {\n    _classCallCheck(this, Measure);\n    this.label = void 0;\n    this.scene = scene;\n  }\n\n  /**\n   * 获取折线总长度\n   * @param overlay <BMapGL.Polyline | geojson> 折线覆盖物\n   * @param opts 可配置项\n   *  - showlabel: <boolean> 是否显示长度label，默认显示\n   *  - unit: <string> 单位，默认为km\n   *  - labelOptions: <Object> label样式配置\n   *  - offset: <BMapGL.Size> 标签偏移\n  */\n  _createClass(Measure, [{\n    key: \"getLength\",\n    value: function getLength(overlay) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        showlabel: true,\n        unit: 'kilometers'\n      };\n      if (overlay instanceof BMapGL.Polyline) {\n        overlay = overlay.toGeoJSON();\n      }\n      var length = GeoCalculator.getLength(overlay);\n      if (opts.showlabel) {\n        var path = overlay.geometry.coordinates;\n        var pos = new BMapGL.Point(path[path.length - 1][0], path[path.length - 1][1]);\n        var text = '';\n        switch (opts.unit) {\n          case 'kilometers':\n            text = '总长度：' + length.toFixed(2) + 'km';\n            break;\n          case 'meters':\n            text = '总长度：' + length.toFixed(2) + 'm';\n            break;\n          default:\n            break;\n        }\n        this.scene.map.removeOverlay(this.label);\n        this.label = new BMapGL.Label(text, {\n          position: pos,\n          offset: opts.offset || new BMapGL.Size(0, 0)\n        });\n        this.label.setStyle(opts.labelOptions);\n        this.scene.map.addOverlay(this.label);\n      }\n      return length;\n    }\n\n    /**\n     * 基于选中的多边形显示面积\n     * @param overlay <BMapGL.Polygon | geojson> 多边形覆盖物\n     * @param opts 可配置项\n     *  - showlabel: <boolean> 是否显示长度label，默认显示\n     *  - unit: <string> 单位，默认为km²\n     *  - labelOptions: <Object> label样式配置\n     *  - offset: <BMapGL.Size> 标签偏移\n    */\n  }, {\n    key: \"getPolygonArea\",\n    value: function getPolygonArea(overlay) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        showlabel: true,\n        unit: 'kilometers'\n      };\n      if (overlay instanceof BMapGL.Polygon) {\n        overlay = overlay.toGeoJSON();\n      }\n      var area = GeoCalculator.getPolygonArea(overlay);\n      if (opts.showlabel) {\n        var center = GeoCalculator.getPolygonCenter(overlay);\n        var text = '';\n        switch (opts.unit) {\n          case 'kilometers':\n            text = area.toFixed(2) + ' km²';\n            break;\n          case 'meters':\n            text = area.toFixed(2) + ' m²';\n            break;\n          default:\n            break;\n        }\n        this.scene.map.removeOverlay(this.label);\n        this.label = new BMapGL.Label(text, {\n          position: center.bdCenter,\n          offset: opts.offset || new BMapGL.Size(-20, -10)\n        });\n        this.label.setStyle(opts.labelOptions);\n        this.scene.map.addOverlay(this.label);\n      }\n      return area;\n    }\n  }]);\n  return Measure;\n}();","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","GeoCalculator","Measure","scene","opts","label","value","getLength","overlay","arguments","undefined","showlabel","unit","BMapGL","Polyline","toGeoJSON","path","geometry","coordinates","pos","Point","text","toFixed","map","removeOverlay","Label","position","offset","Size","setStyle","labelOptions","addOverlay","getPolygonArea","Polygon","area","center","getPolygonCenter","bdCenter"],"sources":["C:/Users/29903/Desktop/毕业设计的各种准备/haidaoxiangmu/hias/node_modules/bmap-draw/es/measure/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n/**\n * @file 获取几何体面积或长度\n * @author dengshufang01 [Flora]\n */\n\nimport { GeoCalculator } from '../calculate/geo-calculator';\nexport var Measure = /*#__PURE__*/function () {\n  function Measure(scene, opts) {\n    _classCallCheck(this, Measure);\n    this.label = void 0;\n    this.scene = scene;\n  }\n\n  /**\n   * 获取折线总长度\n   * @param overlay <BMapGL.Polyline | geojson> 折线覆盖物\n   * @param opts 可配置项\n   *  - showlabel: <boolean> 是否显示长度label，默认显示\n   *  - unit: <string> 单位，默认为km\n   *  - labelOptions: <Object> label样式配置\n   *  - offset: <BMapGL.Size> 标签偏移\n  */\n  _createClass(Measure, [{\n    key: \"getLength\",\n    value: function getLength(overlay) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        showlabel: true,\n        unit: 'kilometers'\n      };\n      if (overlay instanceof BMapGL.Polyline) {\n        overlay = overlay.toGeoJSON();\n      }\n      var length = GeoCalculator.getLength(overlay);\n      if (opts.showlabel) {\n        var path = overlay.geometry.coordinates;\n        var pos = new BMapGL.Point(path[path.length - 1][0], path[path.length - 1][1]);\n        var text = '';\n        switch (opts.unit) {\n          case 'kilometers':\n            text = '总长度：' + length.toFixed(2) + 'km';\n            break;\n          case 'meters':\n            text = '总长度：' + length.toFixed(2) + 'm';\n            break;\n          default:\n            break;\n        }\n        this.scene.map.removeOverlay(this.label);\n        this.label = new BMapGL.Label(text, {\n          position: pos,\n          offset: opts.offset || new BMapGL.Size(0, 0)\n        });\n        this.label.setStyle(opts.labelOptions);\n        this.scene.map.addOverlay(this.label);\n      }\n      return length;\n    }\n\n    /**\n     * 基于选中的多边形显示面积\n     * @param overlay <BMapGL.Polygon | geojson> 多边形覆盖物\n     * @param opts 可配置项\n     *  - showlabel: <boolean> 是否显示长度label，默认显示\n     *  - unit: <string> 单位，默认为km²\n     *  - labelOptions: <Object> label样式配置\n     *  - offset: <BMapGL.Size> 标签偏移\n    */\n  }, {\n    key: \"getPolygonArea\",\n    value: function getPolygonArea(overlay) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        showlabel: true,\n        unit: 'kilometers'\n      };\n      if (overlay instanceof BMapGL.Polygon) {\n        overlay = overlay.toGeoJSON();\n      }\n      var area = GeoCalculator.getPolygonArea(overlay);\n      if (opts.showlabel) {\n        var center = GeoCalculator.getPolygonCenter(overlay);\n        var text = '';\n        switch (opts.unit) {\n          case 'kilometers':\n            text = area.toFixed(2) + ' km²';\n            break;\n          case 'meters':\n            text = area.toFixed(2) + ' m²';\n            break;\n          default:\n            break;\n        }\n        this.scene.map.removeOverlay(this.label);\n        this.label = new BMapGL.Label(text, {\n          position: center.bdCenter,\n          offset: opts.offset || new BMapGL.Size(-20, -10)\n        });\n        this.label.setStyle(opts.labelOptions);\n        this.scene.map.addOverlay(this.label);\n      }\n      return area;\n    }\n  }]);\n  return Measure;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}