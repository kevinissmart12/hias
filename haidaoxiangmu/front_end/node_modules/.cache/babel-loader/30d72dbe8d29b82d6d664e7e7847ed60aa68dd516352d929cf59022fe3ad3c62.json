{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Time from '../../api/time';\nimport Random from '../../api/random';\nexport default {\n  namespaced: true,\n  state: {\n    //discussion\n    discussionList: [],\n    discussionId: '',\n    showReply: false,\n    DCurrentPage: 1,\n    DPageSize: 5,\n    //reply\n    replyList: [],\n    RCurrentPage: 1,\n    RPageSize: 5,\n    hasReply: true,\n    //userid\n    uid: '',\n    isAdmin: '',\n    name: '',\n    //diaglog\n    dialogVisible: false\n  },\n  mutations: {\n    setDiscussionList(state, data) {\n      data.forEach((i, v) => {\n        i.time = Time.time(i.time);\n      });\n      state.discussionList = data;\n    },\n    addDiscussionList(state, data) {\n      data.time = Time.time(data.time);\n      data.user = {\n        'name': data.name\n      };\n      state.discussionList.push(data);\n    },\n    setDid(state, id) {\n      state.discussionId = id;\n    },\n    setShowReply(state, data) {\n      state.showReply = data;\n    },\n    //reply\n    setReplyList(state, data) {\n      //给有rid的列中的user添加user信息\n      data.forEach((i, v) => {\n        if (i.rid) {\n          //再循环\n          data.forEach((subi, subv) => {\n            //找到父回复\n            if (i.rid == subi.id) {\n              i.fatherUser = subi.user;\n            }\n          });\n        }\n        i.time = Time.time(i.time);\n      });\n      state.replyList = data;\n    },\n    addReplyList(state, data) {\n      if (data.rid) {\n        data.time = Time.time(data.time);\n        data.fatherReply.time = Time.time(data.fatherReply.time);\n      }\n      state.replyList.push(data);\n    },\n    deleteReply(state, id) {\n      state.replyList.forEach((i, v) => {\n        if (i.id == id) {\n          //删除\n          state.replyList.slice(v);\n        }\n      });\n    },\n    setHasReply(state, data) {\n      state.hasReply = data;\n    },\n    setUid(state, id) {\n      state.uid = id;\n    },\n    setAdmin(state, num) {\n      state.isAdmin = num;\n    },\n    setName(state, str) {\n      state.name = str;\n    },\n    //page\n    setDCurrentPage(state, num) {\n      state.DCurrentPage = num;\n    },\n    setDPageSize(state, num) {\n      state.DPageSize = num;\n    },\n    setRCurrentPage(state, num) {\n      state.RCurrentPage = num;\n    },\n    setRPageSize(state, num) {\n      state.RPageSize = num;\n    },\n    //dialog\n    setDialogVisible(state, data) {\n      state.dialogVisible = data;\n    }\n  }\n};","map":{"version":3,"names":["Time","Random","namespaced","state","discussionList","discussionId","showReply","DCurrentPage","DPageSize","replyList","RCurrentPage","RPageSize","hasReply","uid","isAdmin","name","dialogVisible","mutations","setDiscussionList","data","forEach","i","v","time","addDiscussionList","user","push","setDid","id","setShowReply","setReplyList","rid","subi","subv","fatherUser","addReplyList","fatherReply","deleteReply","slice","setHasReply","setUid","setAdmin","num","setName","str","setDCurrentPage","setDPageSize","setRCurrentPage","setRPageSize","setDialogVisible"],"sources":["C:/Users/29903/Desktop/毕业设计的各种准备/haidaoxiangmu/hias/src/store/Discussion/index.js"],"sourcesContent":["import Time from '../../api/time'\r\nimport Random from '../../api/random'\r\nexport default {\r\n    namespaced:true,\r\n    state:{\r\n        //discussion\r\n        discussionList:[],\r\n        discussionId:'',\r\n        showReply:false,\r\n\r\n        DCurrentPage:1,\r\n        DPageSize:5,\r\n\r\n        //reply\r\n        replyList:[],\r\n\r\n        RCurrentPage:1,\r\n        RPageSize:5,\r\n        hasReply:true,\r\n\r\n        //userid\r\n        uid:'',\r\n        isAdmin:'',\r\n        name:'',\r\n\r\n        //diaglog\r\n        dialogVisible:false,\r\n    },\r\n    mutations:{\r\n        setDiscussionList(state,data){\r\n            data.forEach((i,v)=>{\r\n                i.time=Time.time(i.time)\r\n            })\r\n\r\n            state.discussionList=data\r\n        },\r\n        addDiscussionList(state,data){\r\n            data.time=Time.time(data.time)\r\n            data.user={\r\n                'name':data.name\r\n            }\r\n            \r\n            state.discussionList.push(data)\r\n        },\r\n        setDid(state,id){\r\n            state.discussionId=id\r\n        },\r\n        setShowReply(state,data){\r\n            state.showReply=data\r\n        },\r\n\r\n        //reply\r\n        setReplyList(state,data){\r\n            //给有rid的列中的user添加user信息\r\n            data.forEach((i,v)=>{\r\n                if(i.rid){\r\n                    //再循环\r\n                    data.forEach((subi,subv)=>{\r\n                        //找到父回复\r\n                        if(i.rid==subi.id){\r\n                            i.fatherUser=subi.user\r\n                        }\r\n                    })\r\n                    \r\n                }\r\n                i.time=Time.time(i.time)\r\n\r\n            })\r\n            state.replyList=data\r\n        },\r\n        addReplyList(state,data){\r\n            if(data.rid){\r\n                data.time=Time.time(data.time)\r\n                data.fatherReply.time=Time.time(data.fatherReply.time)\r\n            }\r\n            \r\n            state.replyList.push(data)\r\n        },\r\n        deleteReply(state,id){\r\n            state.replyList.forEach((i,v)=>{\r\n                if(i.id==id){\r\n                    //删除\r\n                    state.replyList.slice(v)\r\n                }\r\n            })\r\n        },\r\n\r\n        setHasReply(state,data){\r\n            state.hasReply=data\r\n        },\r\n        \r\n\r\n        setUid(state,id){\r\n            state.uid=id\r\n        },\r\n        setAdmin(state,num){\r\n            state.isAdmin=num\r\n        },\r\n        setName(state,str){\r\n            state.name=str\r\n        },\r\n\r\n\r\n        //page\r\n        setDCurrentPage(state,num){\r\n            state.DCurrentPage=num\r\n        },\r\n        setDPageSize(state,num){\r\n            state.DPageSize=num\r\n        },\r\n        setRCurrentPage(state,num){\r\n            state.RCurrentPage=num\r\n        },\r\n        setRPageSize(state,num){\r\n            state.RPageSize=num\r\n        },\r\n\r\n\r\n        //dialog\r\n        setDialogVisible(state,data){\r\n            state.dialogVisible=data\r\n        }\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}