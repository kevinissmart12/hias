{"ast":null,"code":"export default {\n  name: 'reply',\n  data() {\n    return {\n      discussion: {},\n      replyList: [],\n      // 一开始假设有回复\n      hasReply: true\n    };\n  },\n  methods: {\n    getReply() {\n      this.$axios({\n        url: `/api/discussion/get?id=${this.Did}`,\n        method: \"GET\"\n      }).then(res => {\n        console.log(res.data.data);\n        if (res.data.status == 200) {\n          this.discussion = res.data.data.data;\n          if (res.data.data.reply.length == undefined) {\n            this.hasReply = false;\n          } else {\n            this.hasReply = true;\n            this.replyList = res.data.data.reply.slice((this.RCurrentPage - 1) * this.RPageSize, this.RCurrentPage * this.RPageSize);\n\n            //reply 上传 store 在store修饰具体信息\n            this.$store.commit('discussion/setReplyList', res.data.data.reply);\n          }\n        }\n      });\n    },\n    close() {\n      this.$store.commit('discussion/setShowReply', false);\n      this.$store.commit('discussion/setReplyList', []);\n      this.$store.commit('discussion/setRCurrentPage', 1);\n    },\n    setRid(id) {\n      this.$store.commit('discussion/setRId', id);\n    },\n    deleteReply(id) {\n      this.$confirm('此操作将永久删除该回复, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let data = this.qs.stringify({\n          id: id\n        });\n        this.$axios({\n          url: '/api/reply/delete',\n          method: \"POST\",\n          data: data\n        }).then(res => {\n          console.log(res.data);\n          if (res.data.status == 200) {\n            this.$message.success('删除成功');\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    handleSizeChange(size) {\n      this.replyList = this.ReplyList.slice((this.RCurrentPage - 1) * size, this.RCurrentPage * size);\n      this.$store.commit('discussion/setRPageSize', size);\n    },\n    handleCurrentChange(currentPage) {\n      this.replyList = this.ReplyList.slice((currentPage - 1) * this.RPageSize, currentPage * this.RPageSize);\n      this.$store.commit('discussion/setRCurrentPage', currentPage);\n    }\n  },\n  computed: {\n    Did() {\n      return this.$store.state.discussion.discussionId;\n    },\n    ReplyList() {\n      return this.$store.state.discussion.replyList;\n    },\n    Uid() {\n      return this.$store.state.discussion.uid;\n    },\n    IsAdmin() {\n      return this.$store.state.discussion.isAdmin;\n    },\n    ReplyListLength() {\n      return this.$store.state.discussion.replyList.length;\n    },\n    RCurrentPage() {\n      return this.$store.state.discussion.RCurrentPage;\n    },\n    RPageSize() {\n      return this.$store.state.discussion.RPageSize;\n    }\n  },\n  created() {\n    this.getReply();\n  },\n  watch: {\n    ReplyListLength(n, o) {\n      let left = this.ReplyListLength % this.RPageSize; //是否为0\n      let currentPages = Math.floor(this.ReplyListLength / this.RPageSize);\n      if (left != 0) {\n        currentPages += 1;\n      }\n      this.replyList = this.ReplyList.slice((currentPages - 1) * this.RPageSize, currentPages * this.RPageSize);\n      this.$store.commit('discussion/setRCurrentPage', currentPages);\n    }\n  }\n};","map":{"version":3,"mappings":"AAkEA;EACAA;EACAC;IACA;MACAC;MACAC;MACA;MACAC;IACA;EACA;EACAC;IACAC;MAEA;QACAC;QACAC;MACA;QACAC;QAEA;UACA;UACA;YAEA;UAEA;YAEA;YAEA;;YAEA;YACA;UAEA;QACA;MAEA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;IAEA;IACAC;MAEA;QACAC;QACAC;QACAC;MACA;QACA;UACAC;QACA;QACA;UACAT;UACAC;UACAP;QACA;UACAQ;UAEA;YACA;UACA;QACA;MACA;QACA;UACAM;UACAE;QACA;MACA;IAGA;IACAC;MAEA;MACA;IACA;IACAC;MAEA;MACA;IAEA;EACA;EACAC;IAEAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAJ;MACA;MACA;MACA;QACAK;MACA;MACA;MACA;IAEA;EACA;AACA","names":["name","data","discussion","replyList","hasReply","methods","getReply","url","method","console","close","setRid","deleteReply","confirmButtonText","cancelButtonText","type","id","message","handleSizeChange","handleCurrentChange","computed","Did","ReplyList","Uid","IsAdmin","ReplyListLength","RCurrentPage","RPageSize","created","watch","currentPages"],"sourceRoot":"src/components/discussion","sources":["Reply.vue"],"sourcesContent":["<template>\r\n    <div class=\"reply\">\r\n        <el-card class=\"card\">\r\n            <div slot=\"header\" class=\"clearfix\">\r\n                <span style=\"font-size:28px;font-weight:900;\">{{discussion.title}}</span>\r\n                <el-button @click=\"close\" style=\"float: right; padding: 3px 0\" type=\"text\">\r\n                    <i class=\"el-icon-close\"></i>\r\n                </el-button>\r\n\r\n            </div>\r\n            <!-- 无回复展示 -->\r\n            <div v-if=\"hasReply==false\" class=\"no-reply\">\r\n                <span>还没有人回复这个帖子</span>\r\n                <span>你可以</span>\r\n            </div>\r\n\r\n            <el-card class=\"reply-card\" v-for=\"(item,index) in replyList\" :key=\"index\">\r\n                <div class=\"username\">\r\n                    {{item.user.name}}\r\n                </div>\r\n                <div class=\"content\">\r\n                    {{item.content}}\r\n                </div>\r\n\r\n                <!-- 回复的回复 -->\r\n                <div v-if=\"item.rid\" class=\"reply-reply\">\r\n                    <div class=\"username\">\r\n                        回复给:{{item.fatherUser.name}}\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        {{item.fatherReply.content}}\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"time\">\r\n                    {{item.time}}\r\n                </div>\r\n                <span v-show=\"item.user.id==Uid||IsAdmin==1\" class=\"delete-reply\" @click='deleteReply(item.id)'>\r\n                    删除\r\n                </span>\r\n                <span class=\"send-reply\" @click='setRid(item.id)'>\r\n                    回复\r\n                </span>\r\n\r\n            </el-card>\r\n\r\n        </el-card>\r\n\r\n\r\n        <!--  分页 -->\r\n        <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"RCurrentPage\"\r\n            :page-size=\"RPageSize\"\r\n            :page-sizes=\"[5,10]\"\r\n            layout=\"total,sizes, prev, pager, next\"\r\n            :total=\"ReplyListLength\"\r\n            class=\"pagination\">\r\n            \r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'reply',\r\n    data(){\r\n        return{\r\n            discussion:{},\r\n            replyList:[],\r\n            // 一开始假设有回复\r\n            hasReply:true,\r\n        }\r\n    },\r\n    methods:{\r\n        getReply(){\r\n\r\n            this.$axios({\r\n                url:`/api/discussion/get?id=${this.Did}`,\r\n                method:\"GET\"\r\n            }).then(res=>{\r\n                console.log(res.data.data);\r\n\r\n                if(res.data.status==200){\r\n                    this.discussion=res.data.data.data\r\n                    if(res.data.data.reply.length==undefined){\r\n\r\n                        this.hasReply=false\r\n                        \r\n                    }else{\r\n\r\n                        this.hasReply=true\r\n\r\n                        this.replyList=res.data.data.reply.slice((this.RCurrentPage-1)*this.RPageSize,this.RCurrentPage*this.RPageSize)\r\n\r\n                        //reply 上传 store 在store修饰具体信息\r\n                        this.$store.commit('discussion/setReplyList',res.data.data.reply)\r\n\r\n                    }\r\n                }\r\n\r\n            })\r\n        },\r\n        close(){\r\n            this.$store.commit('discussion/setShowReply',false)\r\n            this.$store.commit('discussion/setReplyList',[])\r\n            this.$store.commit('discussion/setRCurrentPage',1)\r\n        },\r\n        setRid(id){\r\n            this.$store.commit('discussion/setRId',id)\r\n            \r\n        },\r\n        deleteReply(id){\r\n\r\n            this.$confirm('此操作将永久删除该回复, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(()=>{\r\n                let data=this.qs.stringify({\r\n                    id:id\r\n                })\r\n                this.$axios({\r\n                    url:'/api/reply/delete',\r\n                    method:\"POST\",\r\n                    data:data\r\n                }).then(res=>{\r\n                    console.log(res.data);\r\n\r\n                    if(res.data.status==200){\r\n                        this.$message.success('删除成功');\r\n                    }\r\n                })\r\n            }).catch(()=>{\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '已取消删除'\r\n                });       \r\n            })\r\n\r\n\r\n        },\r\n        handleSizeChange (size) {\r\n\r\n            this.replyList=this.ReplyList.slice((this.RCurrentPage-1)*size,this.RCurrentPage*size)\r\n            this.$store.commit('discussion/setRPageSize',size)\r\n        },\r\n        handleCurrentChange (currentPage) {\r\n\r\n            this.replyList=this.ReplyList.slice((currentPage-1)*this.RPageSize,currentPage*this.RPageSize)\r\n            this.$store.commit('discussion/setRCurrentPage',currentPage)\r\n\r\n        },\r\n    },\r\n    computed:{\r\n\r\n        Did(){\r\n            return this.$store.state.discussion.discussionId\r\n        },\r\n        ReplyList(){\r\n            return this.$store.state.discussion.replyList\r\n        },\r\n        Uid(){\r\n            return this.$store.state.discussion.uid\r\n        },\r\n        IsAdmin(){\r\n            return this.$store.state.discussion.isAdmin\r\n        },\r\n        ReplyListLength(){\r\n            return this.$store.state.discussion.replyList.length\r\n        },\r\n        RCurrentPage(){\r\n            return this.$store.state.discussion.RCurrentPage\r\n        },\r\n        RPageSize(){\r\n            return this.$store.state.discussion.RPageSize\r\n        },\r\n    },\r\n    created(){\r\n        this.getReply()\r\n    },\r\n    watch:{\r\n        ReplyListLength(n,o){\r\n            let left=(this.ReplyListLength%this.RPageSize)//是否为0\r\n            let currentPages=Math.floor(this.ReplyListLength/this.RPageSize)\r\n            if(left!=0){\r\n                currentPages+=1\r\n            }\r\n            this.replyList=this.ReplyList.slice((currentPages-1)*this.RPageSize,currentPages*this.RPageSize)\r\n            this.$store.commit('discussion/setRCurrentPage',currentPages)\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n    .reply{\r\n        width: 100%;\r\n        height: 100%;\r\n        position:relative;\r\n        .card{\r\n            height: 100%;\r\n            overflow-y:scroll ;\r\n        }\r\n    }\r\n    .card > ::v-deep .el-card__body{\r\n        padding:0;\r\n        \r\n    }\r\n    .reply-card{\r\n        position:relative;\r\n    }\r\n    .username{\r\n        font-size:16px;\r\n    }\r\n    .content{\r\n        font-size:20px;\r\n        font-weight: 700;\r\n        padding:20px;\r\n    }\r\n    .time{\r\n        position:absolute;\r\n        font-size:10px;\r\n        font-weight:200;\r\n    }\r\n    .send-reply{\r\n        position:absolute;\r\n        right:10px;\r\n        bottom:5px;\r\n        color:rgb(63, 81, 195);\r\n        cursor: pointer;\r\n    }\r\n    .delete-reply{\r\n        position:absolute;\r\n        right:50px;\r\n        bottom:5px;\r\n        color:rgb(214, 91, 54);\r\n        cursor: pointer;\r\n    }\r\n    .send-reply:hover{\r\n        text-decoration: underline;\r\n    }\r\n    .delete-reply:hover{\r\n        text-decoration: underline;\r\n    }\r\n    .reply-reply{\r\n        padding:20px;\r\n        margin-bottom:5px;\r\n        background-color: #f5f5f5;\r\n    }\r\n\r\n    .pagination{\r\n        position:absolute;\r\n        bottom:-35px;\r\n        z-index:999;\r\n    }\r\n\r\n\r\n    .no-reply{\r\n        text-align: center;\r\n        padding:10px;\r\n        span{\r\n            margin:10px;\r\n            font-size:20px;\r\n        }\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}